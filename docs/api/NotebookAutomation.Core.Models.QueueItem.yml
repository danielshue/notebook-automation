### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Models.QueueItem
  commentId: T:NotebookAutomation.Core.Models.QueueItem
  id: QueueItem
  parent: NotebookAutomation.Core.Models
  children:
  - NotebookAutomation.Core.Models.QueueItem.#ctor(System.String,System.String)
  - NotebookAutomation.Core.Models.QueueItem.DocumentType
  - NotebookAutomation.Core.Models.QueueItem.FilePath
  - NotebookAutomation.Core.Models.QueueItem.Metadata
  - NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
  - NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
  - NotebookAutomation.Core.Models.QueueItem.Stage
  - NotebookAutomation.Core.Models.QueueItem.Status
  - NotebookAutomation.Core.Models.QueueItem.StatusMessage
  langs:
  - csharp
  - vb
  name: QueueItem
  nameWithType: QueueItem
  fullName: NotebookAutomation.Core.Models.QueueItem
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: QueueItem
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 22
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Represents a document in the processing queue.
  remarks: >-
    The <code>QueueItem</code> class encapsulates information about a document that is

    queued for processing, including its file path, type, status, stage, and metadata.

    It provides properties to track the progress and state of the document throughout

    the processing lifecycle.
  example: []
  syntax:
    content: public class QueueItem
    content.vb: Public Class QueueItem
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Models.QueueItem.#ctor(System.String,System.String)
  commentId: M:NotebookAutomation.Core.Models.QueueItem.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: QueueItem(string, string)
  nameWithType: QueueItem.QueueItem(string, string)
  fullName: NotebookAutomation.Core.Models.QueueItem.QueueItem(string, string)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 22
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Represents a document in the processing queue.
  remarks: >-
    The <code>QueueItem</code> class encapsulates information about a document that is

    queued for processing, including its file path, type, status, stage, and metadata.

    It provides properties to track the progress and state of the document throughout

    the processing lifecycle.
  example: []
  syntax:
    content: public QueueItem(string filePath, string documentType)
    parameters:
    - id: filePath
      type: System.String
      description: The path of the file to be processed.
    - id: documentType
      type: System.String
      description: The document type (e.g., "PDF", "VIDEO").
    content.vb: Public Sub New(filePath As String, documentType As String)
  overload: NotebookAutomation.Core.Models.QueueItem.#ctor*
  nameWithType.vb: QueueItem.New(String, String)
  fullName.vb: NotebookAutomation.Core.Models.QueueItem.New(String, String)
  name.vb: New(String, String)
- uid: NotebookAutomation.Core.Models.QueueItem.FilePath
  commentId: P:NotebookAutomation.Core.Models.QueueItem.FilePath
  id: FilePath
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: FilePath
  nameWithType: QueueItem.FilePath
  fullName: NotebookAutomation.Core.Models.QueueItem.FilePath
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FilePath
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 30
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the path of the file to be processed.
  remarks: This property specifies the full path to the file that is queued for processing.
  example: []
  syntax:
    content: public string FilePath { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FilePath As String
  overload: NotebookAutomation.Core.Models.QueueItem.FilePath*
- uid: NotebookAutomation.Core.Models.QueueItem.Status
  commentId: P:NotebookAutomation.Core.Models.QueueItem.Status
  id: Status
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: Status
  nameWithType: QueueItem.Status
  fullName: NotebookAutomation.Core.Models.QueueItem.Status
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Status
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 38
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the current processing status of the file.
  remarks: This property indicates the overall status of the file, such as "Waiting" or "Completed".
  example: []
  syntax:
    content: public DocumentProcessingStatus Status { get; }
    parameters: []
    return:
      type: NotebookAutomation.Core.Models.DocumentProcessingStatus
    content.vb: Public Property Status As DocumentProcessingStatus
  overload: NotebookAutomation.Core.Models.QueueItem.Status*
- uid: NotebookAutomation.Core.Models.QueueItem.DocumentType
  commentId: P:NotebookAutomation.Core.Models.QueueItem.DocumentType
  id: DocumentType
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: DocumentType
  nameWithType: QueueItem.DocumentType
  fullName: NotebookAutomation.Core.Models.QueueItem.DocumentType
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: DocumentType
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 47
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the document type (e.g., "PDF", "VIDEO").
  remarks: >-
    This property specifies the type of document being processed, which determines

    the processing logic to be applied.
  example: []
  syntax:
    content: public string DocumentType { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DocumentType As String
  overload: NotebookAutomation.Core.Models.QueueItem.DocumentType*
- uid: NotebookAutomation.Core.Models.QueueItem.Stage
  commentId: P:NotebookAutomation.Core.Models.QueueItem.Stage
  id: Stage
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: Stage
  nameWithType: QueueItem.Stage
  fullName: NotebookAutomation.Core.Models.QueueItem.Stage
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Stage
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 56
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the current processing stage.
  remarks: >-
    This property tracks the specific stage of processing, such as "ContentExtraction"

    or "MarkdownCreation".
  example: []
  syntax:
    content: public ProcessingStage Stage { get; }
    parameters: []
    return:
      type: NotebookAutomation.Core.Models.ProcessingStage
    content.vb: Public Property Stage As ProcessingStage
  overload: NotebookAutomation.Core.Models.QueueItem.Stage*
- uid: NotebookAutomation.Core.Models.QueueItem.StatusMessage
  commentId: P:NotebookAutomation.Core.Models.QueueItem.StatusMessage
  id: StatusMessage
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: StatusMessage
  nameWithType: QueueItem.StatusMessage
  fullName: NotebookAutomation.Core.Models.QueueItem.StatusMessage
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: StatusMessage
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 64
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets additional information about the file's current state.
  remarks: This property provides a descriptive message about the file's current processing state.
  example: []
  syntax:
    content: public string StatusMessage { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property StatusMessage As String
  overload: NotebookAutomation.Core.Models.QueueItem.StatusMessage*
- uid: NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
  commentId: P:NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
  id: ProcessingStartTime
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: ProcessingStartTime
  nameWithType: QueueItem.ProcessingStartTime
  fullName: NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessingStartTime
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 72
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the time when processing started for this file.
  remarks: This property records the timestamp when processing began for the file.
  example: []
  syntax:
    content: public DateTime? ProcessingStartTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ProcessingStartTime As Date?
  overload: NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime*
- uid: NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
  commentId: P:NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
  id: ProcessingEndTime
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: ProcessingEndTime
  nameWithType: QueueItem.ProcessingEndTime
  fullName: NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessingEndTime
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 80
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets the time when processing completed for this file.
  remarks: This property records the timestamp when processing finished for the file.
  example: []
  syntax:
    content: public DateTime? ProcessingEndTime { get; }
    parameters: []
    return:
      type: System.Nullable{System.DateTime}
    content.vb: Public Property ProcessingEndTime As Date?
  overload: NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime*
- uid: NotebookAutomation.Core.Models.QueueItem.Metadata
  commentId: P:NotebookAutomation.Core.Models.QueueItem.Metadata
  id: Metadata
  parent: NotebookAutomation.Core.Models.QueueItem
  langs:
  - csharp
  - vb
  name: Metadata
  nameWithType: QueueItem.Metadata
  fullName: NotebookAutomation.Core.Models.QueueItem.Metadata
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Metadata
    path: ../src/c-sharp/NotebookAutomation.Core/Models/QueueItem.cs
    startLine: 89
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets document-specific metadata.
  remarks: >-
    This property contains additional metadata related to the document, such as

    extracted content or processing results.
  example: []
  syntax:
    content: public Dictionary<string, object> Metadata { get; }
    parameters: []
    return:
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
    content.vb: Public ReadOnly Property Metadata As Dictionary(Of String, Object)
  overload: NotebookAutomation.Core.Models.QueueItem.Metadata*
references:
- uid: NotebookAutomation.Core.Models
  commentId: N:NotebookAutomation.Core.Models
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Models
  nameWithType: NotebookAutomation.Core.Models
  fullName: NotebookAutomation.Core.Models
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Models
    name: Models
    href: NotebookAutomation.Core.Models.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Models
    name: Models
    href: NotebookAutomation.Core.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Models.QueueItem.#ctor*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.#ctor
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem__ctor_System_String_System_String_
  name: QueueItem
  nameWithType: QueueItem.QueueItem
  fullName: NotebookAutomation.Core.Models.QueueItem.QueueItem
  nameWithType.vb: QueueItem.New
  fullName.vb: NotebookAutomation.Core.Models.QueueItem.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Models.QueueItem.FilePath*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.FilePath
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_FilePath
  name: FilePath
  nameWithType: QueueItem.FilePath
  fullName: NotebookAutomation.Core.Models.QueueItem.FilePath
- uid: NotebookAutomation.Core.Models.QueueItem.Status*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.Status
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_Status
  name: Status
  nameWithType: QueueItem.Status
  fullName: NotebookAutomation.Core.Models.QueueItem.Status
- uid: NotebookAutomation.Core.Models.DocumentProcessingStatus
  commentId: T:NotebookAutomation.Core.Models.DocumentProcessingStatus
  parent: NotebookAutomation.Core.Models
  href: NotebookAutomation.Core.Models.DocumentProcessingStatus.html
  name: DocumentProcessingStatus
  nameWithType: DocumentProcessingStatus
  fullName: NotebookAutomation.Core.Models.DocumentProcessingStatus
- uid: NotebookAutomation.Core.Models.QueueItem.DocumentType*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.DocumentType
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_DocumentType
  name: DocumentType
  nameWithType: QueueItem.DocumentType
  fullName: NotebookAutomation.Core.Models.QueueItem.DocumentType
- uid: NotebookAutomation.Core.Models.QueueItem.Stage*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.Stage
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_Stage
  name: Stage
  nameWithType: QueueItem.Stage
  fullName: NotebookAutomation.Core.Models.QueueItem.Stage
- uid: NotebookAutomation.Core.Models.ProcessingStage
  commentId: T:NotebookAutomation.Core.Models.ProcessingStage
  parent: NotebookAutomation.Core.Models
  href: NotebookAutomation.Core.Models.ProcessingStage.html
  name: ProcessingStage
  nameWithType: ProcessingStage
  fullName: NotebookAutomation.Core.Models.ProcessingStage
- uid: NotebookAutomation.Core.Models.QueueItem.StatusMessage*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.StatusMessage
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_StatusMessage
  name: StatusMessage
  nameWithType: QueueItem.StatusMessage
  fullName: NotebookAutomation.Core.Models.QueueItem.StatusMessage
- uid: NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_ProcessingStartTime
  name: ProcessingStartTime
  nameWithType: QueueItem.ProcessingStartTime
  fullName: NotebookAutomation.Core.Models.QueueItem.ProcessingStartTime
- uid: System.Nullable{System.DateTime}
  commentId: T:System.Nullable{System.DateTime}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime?
  nameWithType: DateTime?
  fullName: System.DateTime?
  nameWithType.vb: Date?
  fullName.vb: Date?
  name.vb: Date?
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '?'
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_ProcessingEndTime
  name: ProcessingEndTime
  nameWithType: QueueItem.ProcessingEndTime
  fullName: NotebookAutomation.Core.Models.QueueItem.ProcessingEndTime
- uid: NotebookAutomation.Core.Models.QueueItem.Metadata*
  commentId: Overload:NotebookAutomation.Core.Models.QueueItem.Metadata
  href: NotebookAutomation.Core.Models.QueueItem.html#NotebookAutomation_Core_Models_QueueItem_Metadata
  name: Metadata
  nameWithType: QueueItem.Metadata
  fullName: NotebookAutomation.Core.Models.QueueItem.Metadata
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
