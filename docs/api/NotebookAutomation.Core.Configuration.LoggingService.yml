### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.LoggingService
  commentId: T:NotebookAutomation.Core.Configuration.LoggingService
  id: LoggingService
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.LoggingService.#ctor(System.String,System.Boolean)
  - NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  - NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
  - NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
  - NotebookAutomation.Core.Configuration.LoggingService.GetLogger``1
  - NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging
  - NotebookAutomation.Core.Configuration.LoggingService.Logger
  langs:
  - csharp
  - vb
  name: LoggingService
  nameWithType: LoggingService
  fullName: NotebookAutomation.Core.Configuration.LoggingService
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: LoggingService
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 58
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Provides centralized logging capabilities for the notebook automation system.
  remarks: >-
    <p>

    The LoggingService class offers a robust logging infrastructure for the application,

    supporting both console and file-based logging. It provides factory methods for creating

    loggers tailored to specific application needs, including general-purpose loggers and

    specialized loggers for failed operations.

    </p>

    <p>

    Key features include:

    <ul><li>Support for Serilog-based logging with configurable levels</li><li>Thread-safe initialization of logging resources</li><li>Fallback mechanisms for console logging in case of initialization failures</li><li>Integration with Microsoft.Extensions.Logging for typed loggers</li></ul>

    </p>
  example: []
  syntax:
    content: 'public class LoggingService : ILoggingService'
    content.vb: Public Class LoggingService Implements ILoggingService
  inheritance:
  - System.Object
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Configuration.LoggingService.#ctor(System.String,System.Boolean)
  commentId: M:NotebookAutomation.Core.Configuration.LoggingService.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: LoggingService(string, bool)
  nameWithType: LoggingService.LoggingService(string, bool)
  fullName: NotebookAutomation.Core.Configuration.LoggingService.LoggingService(string, bool)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 58
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Provides centralized logging capabilities for the notebook automation system.
  remarks: >-
    <p>

    The LoggingService class offers a robust logging infrastructure for the application,

    supporting both console and file-based logging. It provides factory methods for creating

    loggers tailored to specific application needs, including general-purpose loggers and

    specialized loggers for failed operations.

    </p>

    <p>

    Key features include:

    <ul><li>Support for Serilog-based logging with configurable levels</li><li>Thread-safe initialization of logging resources</li><li>Fallback mechanisms for console logging in case of initialization failures</li><li>Integration with Microsoft.Extensions.Logging for typed loggers</li></ul>

    </p>
  example: []
  syntax:
    content: public LoggingService(string loggingDir, bool debug = false)
    parameters:
    - id: loggingDir
      type: System.String
      description: The directory where log files should be stored.
    - id: debug
      type: System.Boolean
      description: Whether debug mode is enabled.
    content.vb: Public Sub New(loggingDir As String, debug As Boolean = False)
  overload: NotebookAutomation.Core.Configuration.LoggingService.#ctor*
  nameWithType.vb: LoggingService.New(String, Boolean)
  fullName.vb: NotebookAutomation.Core.Configuration.LoggingService.New(String, Boolean)
  name.vb: New(String, Boolean)
- uid: NotebookAutomation.Core.Configuration.LoggingService.Logger
  commentId: P:NotebookAutomation.Core.Configuration.LoggingService.Logger
  id: Logger
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: LoggingService.Logger
  fullName: NotebookAutomation.Core.Configuration.LoggingService.Logger
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Logger
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 95
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the main logger instance used for general application logging.
  example: []
  syntax:
    content: public ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property Logger As ILogger
  overload: NotebookAutomation.Core.Configuration.LoggingService.Logger*
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService.Logger
- uid: NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
  commentId: P:NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
  id: FailedLogger
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: FailedLogger
  nameWithType: LoggingService.FailedLogger
  fullName: NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FailedLogger
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 100
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the specialized logger instance used for recording failed operations.
  example: []
  syntax:
    content: public ILogger FailedLogger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public ReadOnly Property FailedLogger As ILogger
  overload: NotebookAutomation.Core.Configuration.LoggingService.FailedLogger*
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
- uid: NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
  commentId: P:NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
  id: CurrentLogFilePath
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: CurrentLogFilePath
  nameWithType: LoggingService.CurrentLogFilePath
  fullName: NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: CurrentLogFilePath
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 106
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the full path to the current log file.
  example: []
  syntax:
    content: public string? CurrentLogFilePath { get; }
    parameters: []
    return:
      type: System.String
      description: The absolute path to the current log file, or null if logging is not configured to a file.
    content.vb: Public ReadOnly Property CurrentLogFilePath As String
  overload: NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath*
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
- uid: NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging
  commentId: M:NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging
  id: InitializeLogging
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: InitializeLogging()
  nameWithType: LoggingService.InitializeLogging()
  fullName: NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: InitializeLogging
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 134
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Initializes the logging infrastructure.
  example: []
  syntax:
    content: protected virtual void InitializeLogging()
    content.vb: Protected Overridable Sub InitializeLogging()
  overload: NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging*
- uid: NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  commentId: M:NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  id: ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: ConfigureLogging(ILoggingBuilder)
  nameWithType: LoggingService.ConfigureLogging(ILoggingBuilder)
  fullName: NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ConfigureLogging
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 181
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Configures the logging builder with the appropriate providers asynchronously.
  example: []
  syntax:
    content: public void ConfigureLogging(ILoggingBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Logging.ILoggingBuilder
      description: The logging builder to configure.
    content.vb: Public Sub ConfigureLogging(builder As ILoggingBuilder)
  overload: NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging*
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
- uid: NotebookAutomation.Core.Configuration.LoggingService.GetLogger``1
  commentId: M:NotebookAutomation.Core.Configuration.LoggingService.GetLogger``1
  id: GetLogger``1
  parent: NotebookAutomation.Core.Configuration.LoggingService
  langs:
  - csharp
  - vb
  name: GetLogger<T>()
  nameWithType: LoggingService.GetLogger<T>()
  fullName: NotebookAutomation.Core.Configuration.LoggingService.GetLogger<T>()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetLogger
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/LoggingService.cs
    startLine: 262
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets a typed ILogger instance for the specified type T from this LoggingService instance.
  remarks: >-
    This is an instance method for creating a typed logger, which uses the type name

    as the category name. This is the preferred way to create loggers for classes

    when you have a LoggingService instance.
  example: []
  syntax:
    content: public virtual ILogger<T> GetLogger<T>()
    typeParameters:
    - id: T
      description: The type to create the logger for.
    return:
      type: Microsoft.Extensions.Logging.ILogger{{T}}
      description: An ILogger{T} configured for the specified type.
    content.vb: Public Overridable Function GetLogger(Of T)() As ILogger(Of T)
  overload: NotebookAutomation.Core.Configuration.LoggingService.GetLogger*
  implements:
  - NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  nameWithType.vb: LoggingService.GetLogger(Of T)()
  fullName.vb: NotebookAutomation.Core.Configuration.LoggingService.GetLogger(Of T)()
  name.vb: GetLogger(Of T)()
references:
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NotebookAutomation.Core.Configuration.ILoggingService
  commentId: T:NotebookAutomation.Core.Configuration.ILoggingService
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.ILoggingService.html
  name: ILoggingService
  nameWithType: ILoggingService
  fullName: NotebookAutomation.Core.Configuration.ILoggingService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Configuration.LoggingService.#ctor*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.#ctor
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService__ctor_System_String_System_Boolean_
  name: LoggingService
  nameWithType: LoggingService.LoggingService
  fullName: NotebookAutomation.Core.Configuration.LoggingService.LoggingService
  nameWithType.vb: LoggingService.New
  fullName.vb: NotebookAutomation.Core.Configuration.LoggingService.New
  name.vb: New
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NotebookAutomation.Core.Configuration.LoggingService.Logger*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.Logger
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_Logger
  name: Logger
  nameWithType: LoggingService.Logger
  fullName: NotebookAutomation.Core.Configuration.LoggingService.Logger
- uid: NotebookAutomation.Core.Configuration.ILoggingService.Logger
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.Logger
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_Logger
  name: Logger
  nameWithType: ILoggingService.Logger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: NotebookAutomation.Core.Configuration.LoggingService.FailedLogger*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_FailedLogger
  name: FailedLogger
  nameWithType: LoggingService.FailedLogger
  fullName: NotebookAutomation.Core.Configuration.LoggingService.FailedLogger
- uid: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_FailedLogger
  name: FailedLogger
  nameWithType: ILoggingService.FailedLogger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
- uid: NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_CurrentLogFilePath
  name: CurrentLogFilePath
  nameWithType: LoggingService.CurrentLogFilePath
  fullName: NotebookAutomation.Core.Configuration.LoggingService.CurrentLogFilePath
- uid: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_CurrentLogFilePath
  name: CurrentLogFilePath
  nameWithType: ILoggingService.CurrentLogFilePath
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
- uid: NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_InitializeLogging
  name: InitializeLogging
  nameWithType: LoggingService.InitializeLogging
  fullName: NotebookAutomation.Core.Configuration.LoggingService.InitializeLogging
- uid: NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_ConfigureLogging_Microsoft_Extensions_Logging_ILoggingBuilder_
  name: ConfigureLogging
  nameWithType: LoggingService.ConfigureLogging
  fullName: NotebookAutomation.Core.Configuration.LoggingService.ConfigureLogging
- uid: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  commentId: M:NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  isExternal: true
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_ConfigureLogging_Microsoft_Extensions_Logging_ILoggingBuilder_
  name: ConfigureLogging(ILoggingBuilder)
  nameWithType: ILoggingService.ConfigureLogging(ILoggingBuilder)
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  spec.csharp:
  - uid: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
    name: ConfigureLogging
    href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_ConfigureLogging_Microsoft_Extensions_Logging_ILoggingBuilder_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
    name: ConfigureLogging
    href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_ConfigureLogging_Microsoft_Extensions_Logging_ILoggingBuilder_
  - name: (
  - uid: Microsoft.Extensions.Logging.ILoggingBuilder
    name: ILoggingBuilder
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  - name: )
- uid: Microsoft.Extensions.Logging.ILoggingBuilder
  commentId: T:Microsoft.Extensions.Logging.ILoggingBuilder
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  name: ILoggingBuilder
  nameWithType: ILoggingBuilder
  fullName: Microsoft.Extensions.Logging.ILoggingBuilder
- uid: NotebookAutomation.Core.Configuration.LoggingService.GetLogger*
  commentId: Overload:NotebookAutomation.Core.Configuration.LoggingService.GetLogger
  href: NotebookAutomation.Core.Configuration.LoggingService.html#NotebookAutomation_Core_Configuration_LoggingService_GetLogger__1
  name: GetLogger
  nameWithType: LoggingService.GetLogger
  fullName: NotebookAutomation.Core.Configuration.LoggingService.GetLogger
- uid: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  commentId: M:NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_GetLogger__1
  name: GetLogger<T>()
  nameWithType: ILoggingService.GetLogger<T>()
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger<T>()
  nameWithType.vb: ILoggingService.GetLogger(Of T)()
  fullName.vb: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger(Of T)()
  name.vb: GetLogger(Of T)()
  spec.csharp:
  - uid: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
    name: GetLogger
    href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_GetLogger__1
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
    name: GetLogger
    href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_GetLogger__1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger{{T}}
  commentId: T:Microsoft.Extensions.Logging.ILogger{``0}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<T>
  nameWithType: ILogger<T>
  fullName: Microsoft.Extensions.Logging.ILogger<T>
  nameWithType.vb: ILogger(Of T)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of T)
  name.vb: ILogger(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
