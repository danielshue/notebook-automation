### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Services.PromptTemplateService
  commentId: T:NotebookAutomation.Core.Services.PromptTemplateService
  id: PromptTemplateService
  parent: NotebookAutomation.Core.Services
  children:
  - NotebookAutomation.Core.Services.PromptTemplateService.#ctor(Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService},NotebookAutomation.Core.Utils.IYamlHelper,NotebookAutomation.Core.Configuration.AppConfig)
  - NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
  - NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
  - NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync(System.String)
  - NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  - NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
  - NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  langs:
  - csharp
  - vb
  name: PromptTemplateService
  nameWithType: PromptTemplateService
  fullName: NotebookAutomation.Core.Services.PromptTemplateService
  type: Class
  source:
    id: PromptTemplateService
    path: System.Text.RegularExpressions.Generator\System.Text.RegularExpressions.Generator.RegexGenerator\RegexGenerator.g.cs
    startLine: 8
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: >-
    Service for loading prompt templates and performing variable substitution.

    Handles different template types (e.g., chunk summary, final summary) and supports dynamic prompt file loading.
  remarks: >-
    <p>

    This service provides functionality for:

    <ul><li>Loading prompt templates from a configured directory</li><li>Substituting variables in templates</li><li>Handling default templates for chunk and final summaries</li><li>Dynamic initialization of the prompts directory</li></ul>

    </p>

    <p>

    The service integrates with application configuration to determine the prompts directory and provides

    fallback mechanisms to locate the directory in common project structures.

    </p>
  example:
  - >-
    <pre><code class="lang-csharp">var promptService = new PromptTemplateService(logger, config);

    var template = await promptService.LoadTemplateAsync("welcome_message");

    var prompt = promptService.SubstituteVariables(template, new Dictionary&lt;string, string&gt; { { "name", "John" } });

    Console.WriteLine(prompt);</code></pre>
  syntax:
    content: 'public class PromptTemplateService : IPromptService'
    content.vb: Public Class PromptTemplateService Implements IPromptService
  inheritance:
  - System.Object
  implements:
  - NotebookAutomation.Core.Services.IPromptService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
  commentId: P:NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
  id: DefaultChunkPrompt
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: DefaultChunkPrompt
  nameWithType: PromptTemplateService.DefaultChunkPrompt
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: DefaultChunkPrompt
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 47
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  syntax:
    content: public static string DefaultChunkPrompt { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property DefaultChunkPrompt As String
  overload: NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt*
- uid: NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
  commentId: P:NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
  id: DefaultFinalPrompt
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: DefaultFinalPrompt
  nameWithType: PromptTemplateService.DefaultFinalPrompt
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: DefaultFinalPrompt
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 50
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  syntax:
    content: public static string DefaultFinalPrompt { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Shared ReadOnly Property DefaultFinalPrompt As String
  overload: NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt*
- uid: NotebookAutomation.Core.Services.PromptTemplateService.#ctor(Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService},NotebookAutomation.Core.Utils.IYamlHelper,NotebookAutomation.Core.Configuration.AppConfig)
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.#ctor(Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService},NotebookAutomation.Core.Utils.IYamlHelper,NotebookAutomation.Core.Configuration.AppConfig)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService},NotebookAutomation.Core.Utils.IYamlHelper,NotebookAutomation.Core.Configuration.AppConfig)'
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: PromptTemplateService(ILogger<PromptTemplateService>, IYamlHelper, AppConfig)
  nameWithType: PromptTemplateService.PromptTemplateService(ILogger<PromptTemplateService>, IYamlHelper, AppConfig)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.PromptTemplateService(Microsoft.Extensions.Logging.ILogger<NotebookAutomation.Core.Services.PromptTemplateService>, NotebookAutomation.Core.Utils.IYamlHelper, NotebookAutomation.Core.Configuration.AppConfig)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 68
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Initializes a new instance of the <xref href="NotebookAutomation.Core.Services.PromptTemplateService" data-throw-if-not-resolved="false"></xref> class.
  remarks: >-
    <p>

    This constructor initializes the service and sets up the prompts directory using the provided configuration.

    </p>
  example:
  - <pre><code class="lang-csharp">var promptService = new PromptTemplateService(logger, yamlHelper, config);</code></pre>
  syntax:
    content: public PromptTemplateService(ILogger<PromptTemplateService> logger, IYamlHelper yamlHelper, AppConfig config)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService}
      description: The logger to use for logging.
    - id: yamlHelper
      type: NotebookAutomation.Core.Utils.IYamlHelper
      description: The YAML helper for processing frontmatter.
    - id: config
      type: NotebookAutomation.Core.Configuration.AppConfig
      description: The application configuration.
    content.vb: Public Sub New(logger As ILogger(Of PromptTemplateService), yamlHelper As IYamlHelper, config As AppConfig)
  overload: NotebookAutomation.Core.Services.PromptTemplateService.#ctor*
  nameWithType.vb: PromptTemplateService.New(ILogger(Of PromptTemplateService), IYamlHelper, AppConfig)
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.New(Microsoft.Extensions.Logging.ILogger(Of NotebookAutomation.Core.Services.PromptTemplateService), NotebookAutomation.Core.Utils.IYamlHelper, NotebookAutomation.Core.Configuration.AppConfig)
  name.vb: New(ILogger(Of PromptTemplateService), IYamlHelper, AppConfig)
- uid: NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
  commentId: P:NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
  id: PromptsDirectory
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: PromptsDirectory
  nameWithType: PromptTemplateService.PromptsDirectory
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: PromptsDirectory
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 174
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Gets the path to the prompts directory.
  example: []
  syntax:
    content: public string PromptsDirectory { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PromptsDirectory As String
  overload: NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory*
- uid: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: LoadAndSubstituteAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: LoadAndSubstituteAsync(string, Dictionary<string, string>)
  nameWithType: PromptTemplateService.LoadAndSubstituteAsync(string, Dictionary<string, string>)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync(string, System.Collections.Generic.Dictionary<string, string>)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: LoadAndSubstituteAsync
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 182
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Loads a prompt template and substitutes variables.
  example: []
  syntax:
    content: public virtual Task<string> LoadAndSubstituteAsync(string templatePath, Dictionary<string, string> substitutionValues)
    parameters:
    - id: templatePath
      type: System.String
      description: Path to the prompt template file.
    - id: substitutionValues
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: Prompt string with variables substituted.
    content.vb: Public Overridable Function LoadAndSubstituteAsync(templatePath As String, substitutionValues As Dictionary(Of String, String)) As Task(Of String)
  overload: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync*
  nameWithType.vb: PromptTemplateService.LoadAndSubstituteAsync(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: LoadAndSubstituteAsync(String, Dictionary(Of String, String))
- uid: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: SubstituteVariables(string, Dictionary<string, string>?)
  nameWithType: PromptTemplateService.SubstituteVariables(string, Dictionary<string, string>?)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables(string, System.Collections.Generic.Dictionary<string, string>?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: SubstituteVariables
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 201
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Substitutes variables in a template string.
  example: []
  syntax:
    content: public string SubstituteVariables(string template, Dictionary<string, string>? substitutionValues)
    parameters:
    - id: template
      type: System.String
      description: The template string with placeholders.
    - id: substitutionValues
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.String
      description: The template with variables substituted.
    content.vb: Public Function SubstituteVariables(template As String, substitutionValues As Dictionary(Of String, String)) As String
  overload: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables*
  implements:
  - NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: PromptTemplateService.SubstituteVariables(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: SubstituteVariables(String, Dictionary(Of String, String))
- uid: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: GetPromptAsync(string, Dictionary<string, string>?)
  nameWithType: PromptTemplateService.GetPromptAsync(string, Dictionary<string, string>?)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync(string, System.Collections.Generic.Dictionary<string, string>?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetPromptAsync
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 221
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Gets a prompt with variables substituted.
  example: []
  syntax:
    content: public Task<string> GetPromptAsync(string templateName, Dictionary<string, string>? substitutionValues)
    parameters:
    - id: templateName
      type: System.String
      description: Name of the template to load, without file extension.
    - id: substitutionValues
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The prompt with variables substituted.
    content.vb: Public Function GetPromptAsync(templateName As String, substitutionValues As Dictionary(Of String, String)) As Task(Of String)
  overload: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync*
  implements:
  - NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: PromptTemplateService.GetPromptAsync(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: GetPromptAsync(String, Dictionary(Of String, String))
- uid: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync(System.String)
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync(System.String)
  id: LoadTemplateAsync(System.String)
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: LoadTemplateAsync(string)
  nameWithType: PromptTemplateService.LoadTemplateAsync(string)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync(string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: LoadTemplateAsync
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 232
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Loads a template by name from the prompts directory.
  example: []
  syntax:
    content: public virtual Task<string> LoadTemplateAsync(string templateName)
    parameters:
    - id: templateName
      type: System.String
      description: Name of the prompt template (e.g., "chunk_summary_prompt").
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The template content, or a default template if not found.
    content.vb: Public Overridable Function LoadTemplateAsync(templateName As String) As Task(Of String)
  overload: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync*
  implements:
  - NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(System.String)
  nameWithType.vb: PromptTemplateService.LoadTemplateAsync(String)
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync(String)
  name.vb: LoadTemplateAsync(String)
- uid: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  id: ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.PromptTemplateService
  langs:
  - csharp
  - vb
  name: ProcessTemplateAsync(string, Dictionary<string, string>?)
  nameWithType: PromptTemplateService.ProcessTemplateAsync(string, Dictionary<string, string>?)
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync(string, System.Collections.Generic.Dictionary<string, string>?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessTemplateAsync
    path: ../src/c-sharp/NotebookAutomation.Core/Services/PromptTemplateService.cs
    startLine: 290
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: Processes template with variables asynchronously.
  example: []
  syntax:
    content: public Task<string> ProcessTemplateAsync(string template, Dictionary<string, string>? substitutionValues)
    parameters:
    - id: template
      type: System.String
      description: The template string with placeholders.
    - id: substitutionValues
      type: System.Collections.Generic.Dictionary{System.String,System.String}
    return:
      type: System.Threading.Tasks.Task{System.String}
      description: The template with variables substituted.
    content.vb: Public Function ProcessTemplateAsync(template As String, substitutionValues As Dictionary(Of String, String)) As Task(Of String)
  overload: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync*
  implements:
  - NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  nameWithType.vb: PromptTemplateService.ProcessTemplateAsync(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: ProcessTemplateAsync(String, Dictionary(Of String, String))
references:
- uid: NotebookAutomation.Core.Services
  commentId: N:NotebookAutomation.Core.Services
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Services
  nameWithType: NotebookAutomation.Core.Services
  fullName: NotebookAutomation.Core.Services
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Services
    name: Services
    href: NotebookAutomation.Core.Services.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Services
    name: Services
    href: NotebookAutomation.Core.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NotebookAutomation.Core.Services.IPromptService
  commentId: T:NotebookAutomation.Core.Services.IPromptService
  parent: NotebookAutomation.Core.Services
  href: NotebookAutomation.Core.Services.IPromptService.html
  name: IPromptService
  nameWithType: IPromptService
  fullName: NotebookAutomation.Core.Services.IPromptService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_DefaultChunkPrompt
  name: DefaultChunkPrompt
  nameWithType: PromptTemplateService.DefaultChunkPrompt
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.DefaultChunkPrompt
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_DefaultFinalPrompt
  name: DefaultFinalPrompt
  nameWithType: PromptTemplateService.DefaultFinalPrompt
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.DefaultFinalPrompt
- uid: NotebookAutomation.Core.Services.PromptTemplateService
  commentId: T:NotebookAutomation.Core.Services.PromptTemplateService
  href: NotebookAutomation.Core.Services.PromptTemplateService.html
  name: PromptTemplateService
  nameWithType: PromptTemplateService
  fullName: NotebookAutomation.Core.Services.PromptTemplateService
- uid: NotebookAutomation.Core.Services.PromptTemplateService.#ctor*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.#ctor
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService__ctor_Microsoft_Extensions_Logging_ILogger_NotebookAutomation_Core_Services_PromptTemplateService__NotebookAutomation_Core_Utils_IYamlHelper_NotebookAutomation_Core_Configuration_AppConfig_
  name: PromptTemplateService
  nameWithType: PromptTemplateService.PromptTemplateService
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.PromptTemplateService
  nameWithType.vb: PromptTemplateService.New
  fullName.vb: NotebookAutomation.Core.Services.PromptTemplateService.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService}
  commentId: T:Microsoft.Extensions.Logging.ILogger{NotebookAutomation.Core.Services.PromptTemplateService}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<PromptTemplateService>
  nameWithType: ILogger<PromptTemplateService>
  fullName: Microsoft.Extensions.Logging.ILogger<NotebookAutomation.Core.Services.PromptTemplateService>
  nameWithType.vb: ILogger(Of PromptTemplateService)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of NotebookAutomation.Core.Services.PromptTemplateService)
  name.vb: ILogger(Of PromptTemplateService)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - uid: NotebookAutomation.Core.Services.PromptTemplateService
    name: PromptTemplateService
    href: NotebookAutomation.Core.Services.PromptTemplateService.html
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - uid: NotebookAutomation.Core.Services.PromptTemplateService
    name: PromptTemplateService
    href: NotebookAutomation.Core.Services.PromptTemplateService.html
  - name: )
- uid: NotebookAutomation.Core.Utils.IYamlHelper
  commentId: T:NotebookAutomation.Core.Utils.IYamlHelper
  parent: NotebookAutomation.Core.Utils
  href: NotebookAutomation.Core.Utils.IYamlHelper.html
  name: IYamlHelper
  nameWithType: IYamlHelper
  fullName: NotebookAutomation.Core.Utils.IYamlHelper
- uid: NotebookAutomation.Core.Configuration.AppConfig
  commentId: T:NotebookAutomation.Core.Configuration.AppConfig
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.AppConfig.html
  name: AppConfig
  nameWithType: AppConfig
  fullName: NotebookAutomation.Core.Configuration.AppConfig
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: NotebookAutomation.Core.Utils
  commentId: N:NotebookAutomation.Core.Utils
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Utils
  nameWithType: NotebookAutomation.Core.Utils
  fullName: NotebookAutomation.Core.Utils
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Utils
    name: Utils
    href: NotebookAutomation.Core.Utils.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Utils
    name: Utils
    href: NotebookAutomation.Core.Utils.html
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_PromptsDirectory
  name: PromptsDirectory
  nameWithType: PromptTemplateService.PromptsDirectory
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.PromptsDirectory
- uid: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_LoadAndSubstituteAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: LoadAndSubstituteAsync
  nameWithType: PromptTemplateService.LoadAndSubstituteAsync
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.LoadAndSubstituteAsync
- uid: System.Collections.Generic.Dictionary{System.String,System.String}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, string>
  nameWithType: Dictionary<string, string>
  fullName: System.Collections.Generic.Dictionary<string, string>
  nameWithType.vb: Dictionary(Of String, String)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, String)
  name.vb: Dictionary(Of String, String)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Threading.Tasks.Task{System.String}
  commentId: T:System.Threading.Tasks.Task{System.String}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<string>
  nameWithType: Task<string>
  fullName: System.Threading.Tasks.Task<string>
  nameWithType.vb: Task(Of String)
  fullName.vb: System.Threading.Tasks.Task(Of String)
  name.vb: Task(Of String)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_SubstituteVariables_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: SubstituteVariables
  nameWithType: PromptTemplateService.SubstituteVariables
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.SubstituteVariables
- uid: NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.IPromptService
  isExternal: true
  href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_SubstituteVariables_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: SubstituteVariables(string, Dictionary<string, string>)
  nameWithType: IPromptService.SubstituteVariables(string, Dictionary<string, string>)
  fullName: NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(string, System.Collections.Generic.Dictionary<string, string>)
  nameWithType.vb: IPromptService.SubstituteVariables(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: SubstituteVariables(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: SubstituteVariables
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_SubstituteVariables_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.IPromptService.SubstituteVariables(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: SubstituteVariables
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_SubstituteVariables_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_GetPromptAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: GetPromptAsync
  nameWithType: PromptTemplateService.GetPromptAsync
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.GetPromptAsync
- uid: NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.IPromptService
  isExternal: true
  href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_GetPromptAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: GetPromptAsync(string, Dictionary<string, string>)
  nameWithType: IPromptService.GetPromptAsync(string, Dictionary<string, string>)
  fullName: NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(string, System.Collections.Generic.Dictionary<string, string>)
  nameWithType.vb: IPromptService.GetPromptAsync(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: GetPromptAsync(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetPromptAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_GetPromptAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.IPromptService.GetPromptAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: GetPromptAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_GetPromptAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
- uid: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_LoadTemplateAsync_System_String_
  name: LoadTemplateAsync
  nameWithType: PromptTemplateService.LoadTemplateAsync
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.LoadTemplateAsync
- uid: NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(System.String)
  commentId: M:NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(System.String)
  parent: NotebookAutomation.Core.Services.IPromptService
  isExternal: true
  href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_LoadTemplateAsync_System_String_
  name: LoadTemplateAsync(string)
  nameWithType: IPromptService.LoadTemplateAsync(string)
  fullName: NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(string)
  nameWithType.vb: IPromptService.LoadTemplateAsync(String)
  fullName.vb: NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(String)
  name.vb: LoadTemplateAsync(String)
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(System.String)
    name: LoadTemplateAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_LoadTemplateAsync_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.IPromptService.LoadTemplateAsync(System.String)
    name: LoadTemplateAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_LoadTemplateAsync_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync*
  commentId: Overload:NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync
  href: NotebookAutomation.Core.Services.PromptTemplateService.html#NotebookAutomation_Core_Services_PromptTemplateService_ProcessTemplateAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: ProcessTemplateAsync
  nameWithType: PromptTemplateService.ProcessTemplateAsync
  fullName: NotebookAutomation.Core.Services.PromptTemplateService.ProcessTemplateAsync
- uid: NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  commentId: M:NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
  parent: NotebookAutomation.Core.Services.IPromptService
  isExternal: true
  href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_ProcessTemplateAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  name: ProcessTemplateAsync(string, Dictionary<string, string>)
  nameWithType: IPromptService.ProcessTemplateAsync(string, Dictionary<string, string>)
  fullName: NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(string, System.Collections.Generic.Dictionary<string, string>)
  nameWithType.vb: IPromptService.ProcessTemplateAsync(String, Dictionary(Of String, String))
  fullName.vb: NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(String, System.Collections.Generic.Dictionary(Of String, String))
  name.vb: ProcessTemplateAsync(String, Dictionary(Of String, String))
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: ProcessTemplateAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_ProcessTemplateAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.IPromptService.ProcessTemplateAsync(System.String,System.Collections.Generic.Dictionary{System.String,System.String})
    name: ProcessTemplateAsync
    href: NotebookAutomation.Core.Services.IPromptService.html#NotebookAutomation_Core_Services_IPromptService_ProcessTemplateAsync_System_String_System_Collections_Generic_Dictionary_System_String_System_String__
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  - name: )
