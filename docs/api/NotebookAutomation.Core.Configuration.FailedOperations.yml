### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.FailedOperations
  commentId: T:NotebookAutomation.Core.Configuration.FailedOperations
  id: FailedOperations
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Exception)
  - NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.String)
  langs:
  - csharp
  - vb
  name: FailedOperations
  nameWithType: FailedOperations
  fullName: NotebookAutomation.Core.Configuration.FailedOperations
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FailedOperations
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
    startLine: 44
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Contains methods and constants for managing and recording failed operations.
  remarks: >-
    <p>

    The FailedOperations class provides a centralized way to handle operations that fail

    during execution. It works in conjunction with specialized loggers created by the

    <xref href="NotebookAutomation.Core.Configuration.LoggingService" data-throw-if-not-resolved="false"></xref> to record detailed information about failures in a consistent format.

    </p>

    <p>

    This class is primarily used as a category name for specialized loggers and as a container

    for constants and static methods related to failed operations.

    </p>

    <p>

    When operations fail, they should be logged using a failed logger (created with

    LoggingService.CreateFailedLogger) to ensure consistent tracking and reporting

    of failures throughout the application.

    </p>
  example:
  - >-
    Example of using a failed logger to record a failed operation:

    <pre><code class="lang-csharp">try

    {
        // Perform operation
        await ProcessFile(filePath);
    }

    catch (Exception ex)

    {
        failedLogger.LogError("Failed to process file: {Path}. Error: {Error}", filePath, ex.Message);
    }</code></pre>
  syntax:
    content: public static class FailedOperations
    content.vb: Public Module FailedOperations
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Exception)
  commentId: M:NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Exception)
  id: RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.Exception)
  parent: NotebookAutomation.Core.Configuration.FailedOperations
  langs:
  - csharp
  - vb
  name: RecordFailedFileOperation(ILogger, string, string, Exception)
  nameWithType: FailedOperations.RecordFailedFileOperation(ILogger, string, string, Exception)
  fullName: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger, string, string, System.Exception)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: RecordFailedFileOperation
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
    startLine: 63
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Records a failed file operation using the provided logger.
  remarks: >-
    <p>

    This method provides a standardized way to log failed file operations, ensuring

    consistent formatting and detail level across the application.

    </p>

    <p>

    The method logs the failure at the Error level, including the file path, operation name,

    and exception details (message and stack trace).

    </p>
  example: []
  syntax:
    content: public static void RecordFailedFileOperation(ILogger failedLogger, string filePath, string operationName, Exception exception)
    parameters:
    - id: failedLogger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to record the failure with.
    - id: filePath
      type: System.String
      description: The path to the file that failed to process.
    - id: operationName
      type: System.String
      description: The name of the operation that failed.
    - id: exception
      type: System.Exception
      description: The exception that caused the failure.
    content.vb: Public Shared Sub RecordFailedFileOperation(failedLogger As ILogger, filePath As String, operationName As String, exception As Exception)
  overload: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation*
  nameWithType.vb: FailedOperations.RecordFailedFileOperation(ILogger, String, String, Exception)
  fullName.vb: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger, String, String, System.Exception)
  name.vb: RecordFailedFileOperation(ILogger, String, String, Exception)
- uid: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.String)
  commentId: M:NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.String)
  id: RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger,System.String,System.String,System.String)
  parent: NotebookAutomation.Core.Configuration.FailedOperations
  langs:
  - csharp
  - vb
  name: RecordFailedFileOperation(ILogger, string, string, string)
  nameWithType: FailedOperations.RecordFailedFileOperation(ILogger, string, string, string)
  fullName: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger, string, string, string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: RecordFailedFileOperation
    path: ../src/c-sharp/NotebookAutomation.Core/Configuration/FailedOperations.cs
    startLine: 95
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Records a failed file operation with a custom error message.
  remarks: >-
    <p>

    This overload is useful when you want to provide a custom error message rather than

    recording an exception's details. This is common when operations fail for logical

    reasons rather than due to exceptions.

    </p>

    <p>

    The method logs the failure at the Error level, including the file path, operation name,

    and the provided error message.

    </p>
  example: []
  syntax:
    content: public static void RecordFailedFileOperation(ILogger failedLogger, string filePath, string operationName, string errorMessage)
    parameters:
    - id: failedLogger
      type: Microsoft.Extensions.Logging.ILogger
      description: The logger to record the failure with.
    - id: filePath
      type: System.String
      description: The path to the file that failed to process.
    - id: operationName
      type: System.String
      description: The name of the operation that failed.
    - id: errorMessage
      type: System.String
      description: A custom error message describing the failure.
    content.vb: Public Shared Sub RecordFailedFileOperation(failedLogger As ILogger, filePath As String, operationName As String, errorMessage As String)
  overload: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation*
  nameWithType.vb: FailedOperations.RecordFailedFileOperation(ILogger, String, String, String)
  fullName.vb: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation(Microsoft.Extensions.Logging.ILogger, String, String, String)
  name.vb: RecordFailedFileOperation(ILogger, String, String, String)
references:
- uid: NotebookAutomation.Core.Configuration.LoggingService
  commentId: T:NotebookAutomation.Core.Configuration.LoggingService
  href: NotebookAutomation.Core.Configuration.LoggingService.html
  name: LoggingService
  nameWithType: LoggingService
  fullName: NotebookAutomation.Core.Configuration.LoggingService
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation*
  commentId: Overload:NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation
  href: NotebookAutomation.Core.Configuration.FailedOperations.html#NotebookAutomation_Core_Configuration_FailedOperations_RecordFailedFileOperation_Microsoft_Extensions_Logging_ILogger_System_String_System_String_System_Exception_
  name: RecordFailedFileOperation
  nameWithType: FailedOperations.RecordFailedFileOperation
  fullName: NotebookAutomation.Core.Configuration.FailedOperations.RecordFailedFileOperation
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Exception
  commentId: T:System.Exception
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.exception
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
