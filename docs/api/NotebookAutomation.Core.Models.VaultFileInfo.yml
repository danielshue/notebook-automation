### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Models.VaultFileInfo
  commentId: T:NotebookAutomation.Core.Models.VaultFileInfo
  id: VaultFileInfo
  parent: NotebookAutomation.Core.Models
  children:
  - NotebookAutomation.Core.Models.VaultFileInfo.ContentType
  - NotebookAutomation.Core.Models.VaultFileInfo.Course
  - NotebookAutomation.Core.Models.VaultFileInfo.FileName
  - NotebookAutomation.Core.Models.VaultFileInfo.FullPath
  - NotebookAutomation.Core.Models.VaultFileInfo.Module
  - NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
  - NotebookAutomation.Core.Models.VaultFileInfo.Title
  langs:
  - csharp
  - vb
  name: VaultFileInfo
  nameWithType: VaultFileInfo
  fullName: NotebookAutomation.Core.Models.VaultFileInfo
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: VaultFileInfo
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 14
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Represents information about a file within a vault for index generation.
  example: []
  syntax:
    content: public class VaultFileInfo
    content.vb: Public Class VaultFileInfo
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Models.VaultFileInfo.FileName
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.FileName
  id: FileName
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: FileName
  nameWithType: VaultFileInfo.FileName
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.FileName
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FileName
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 19
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the file name.
  example: []
  syntax:
    content: public string FileName { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FileName As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.FileName*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
  id: RelativePath
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: RelativePath
  nameWithType: VaultFileInfo.RelativePath
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: RelativePath
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 24
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the relative path from the vault root.
  example: []
  syntax:
    content: public string RelativePath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property RelativePath As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.RelativePath*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Title
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.Title
  id: Title
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: Title
  nameWithType: VaultFileInfo.Title
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Title
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Title
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 29
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the friendly title for display.
  example: []
  syntax:
    content: public string Title { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Title As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.Title*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.ContentType
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.ContentType
  id: ContentType
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: ContentType
  nameWithType: VaultFileInfo.ContentType
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.ContentType
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ContentType
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 34
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the content type (reading, video, transcript, etc.).
  example: []
  syntax:
    content: public string ContentType { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ContentType As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.ContentType*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Course
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.Course
  id: Course
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: Course
  nameWithType: VaultFileInfo.Course
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Course
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Course
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 39
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the course name.
  example: []
  syntax:
    content: public string? Course { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property Course As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.Course*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Module
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.Module
  id: Module
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: Module
  nameWithType: VaultFileInfo.Module
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Module
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Module
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 44
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the module name.
  example: []
  syntax:
    content: public string? Module { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property [Module] As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.Module*
- uid: NotebookAutomation.Core.Models.VaultFileInfo.FullPath
  commentId: P:NotebookAutomation.Core.Models.VaultFileInfo.FullPath
  id: FullPath
  parent: NotebookAutomation.Core.Models.VaultFileInfo
  langs:
  - csharp
  - vb
  name: FullPath
  nameWithType: VaultFileInfo.FullPath
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.FullPath
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FullPath
    path: ../src/c-sharp/NotebookAutomation.Core/Models/VaultFileInfo.cs
    startLine: 49
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Models
  summary: Gets or sets the full file path.
  example: []
  syntax:
    content: public string FullPath { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property FullPath As String
  overload: NotebookAutomation.Core.Models.VaultFileInfo.FullPath*
references:
- uid: NotebookAutomation.Core.Models
  commentId: N:NotebookAutomation.Core.Models
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Models
  nameWithType: NotebookAutomation.Core.Models
  fullName: NotebookAutomation.Core.Models
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Models
    name: Models
    href: NotebookAutomation.Core.Models.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Models
    name: Models
    href: NotebookAutomation.Core.Models.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Models.VaultFileInfo.FileName*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.FileName
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_FileName
  name: FileName
  nameWithType: VaultFileInfo.FileName
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.FileName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Models.VaultFileInfo.RelativePath*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_RelativePath
  name: RelativePath
  nameWithType: VaultFileInfo.RelativePath
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.RelativePath
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Title*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.Title
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_Title
  name: Title
  nameWithType: VaultFileInfo.Title
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Title
- uid: NotebookAutomation.Core.Models.VaultFileInfo.ContentType*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.ContentType
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_ContentType
  name: ContentType
  nameWithType: VaultFileInfo.ContentType
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.ContentType
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Course*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.Course
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_Course
  name: Course
  nameWithType: VaultFileInfo.Course
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Course
- uid: NotebookAutomation.Core.Models.VaultFileInfo.Module*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.Module
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_Module
  name: Module
  nameWithType: VaultFileInfo.Module
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.Module
- uid: NotebookAutomation.Core.Models.VaultFileInfo.FullPath*
  commentId: Overload:NotebookAutomation.Core.Models.VaultFileInfo.FullPath
  href: NotebookAutomation.Core.Models.VaultFileInfo.html#NotebookAutomation_Core_Models_VaultFileInfo_FullPath
  name: FullPath
  nameWithType: VaultFileInfo.FullPath
  fullName: NotebookAutomation.Core.Models.VaultFileInfo.FullPath
