### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  commentId: T:NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  id: MarkdownNoteBuilder
  parent: NotebookAutomation.Core.Utils
  children:
  - NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor(Microsoft.Extensions.Logging.ILogger)
  - NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)
  - NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary{System.String,System.Object})
  langs:
  - csharp
  - vb
  name: MarkdownNoteBuilder
  nameWithType: MarkdownNoteBuilder
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: MarkdownNoteBuilder
    path: ../src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
    startLine: 29
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Utils
  summary: Provides a reusable, strongly-typed builder for generating markdown notes with YAML frontmatter.
  remarks: >-
    <p>

    This class simplifies the creation of markdown notes that require YAML frontmatter for metadata, supporting both

    frontmatter-only and full note (frontmatter + body) scenarios. It uses <xref href="NotebookAutomation.Core.Utils.YamlHelper" data-throw-if-not-resolved="false"></xref> for serialization.

    </p>

    <example>


    <pre><code class="lang-csharp">var builder = new MarkdownNoteBuilder();

    var frontmatter = new Dictionary&lt;string, object&gt; { ["title"] = "Sample" };

    string note = builder.BuildNote(frontmatter, "# Heading\nContent");</code></pre>

    </example>
  example: []
  syntax:
    content: public class MarkdownNoteBuilder
    content.vb: Public Class MarkdownNoteBuilder
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor(Microsoft.Extensions.Logging.ILogger)
  commentId: M:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor(Microsoft.Extensions.Logging.ILogger)
  id: '#ctor(Microsoft.Extensions.Logging.ILogger)'
  parent: NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  langs:
  - csharp
  - vb
  name: MarkdownNoteBuilder(ILogger?)
  nameWithType: MarkdownNoteBuilder.MarkdownNoteBuilder(ILogger?)
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.MarkdownNoteBuilder(Microsoft.Extensions.Logging.ILogger?)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: ../src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
    startLine: 29
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Utils
  summary: Provides a reusable, strongly-typed builder for generating markdown notes with YAML frontmatter.
  remarks: >-
    <p>

    This class simplifies the creation of markdown notes that require YAML frontmatter for metadata, supporting both

    frontmatter-only and full note (frontmatter + body) scenarios. It uses <xref href="NotebookAutomation.Core.Utils.YamlHelper" data-throw-if-not-resolved="false"></xref> for serialization.

    </p>

    <example>


    <pre><code class="lang-csharp">var builder = new MarkdownNoteBuilder();

    var frontmatter = new Dictionary&lt;string, object&gt; { ["title"] = "Sample" };

    string note = builder.BuildNote(frontmatter, "# Heading\nContent");</code></pre>

    </example>
  example: []
  syntax:
    content: public MarkdownNoteBuilder(ILogger? logger = null)
    parameters:
    - id: logger
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: Public Sub New(logger As ILogger = Nothing)
  overload: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor*
  nameWithType.vb: MarkdownNoteBuilder.New(ILogger)
  fullName.vb: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.New(Microsoft.Extensions.Logging.ILogger)
  name.vb: New(ILogger)
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary{System.String,System.Object})
  commentId: M:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary{System.String,System.Object})
  id: CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary{System.String,System.Object})
  parent: NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  langs:
  - csharp
  - vb
  name: CreateMarkdownWithFrontmatter(Dictionary<string, object>)
  nameWithType: MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(Dictionary<string, object>)
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary<string, object>)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: CreateMarkdownWithFrontmatter
    path: ../src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
    startLine: 47
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Utils
  summary: Builds a markdown note containing only YAML frontmatter (no content body).
  remarks: The resulting string will have a YAML frontmatter block delimited by <code>---</code> and two trailing newlines.
  example:
  - >-
    <pre><code class="lang-csharp">var frontmatter = new Dictionary&lt;string, object&gt; { ["title"] = "Sample" };

    string note = builder.CreateMarkdownWithFrontmatter(frontmatter);</code></pre>
  syntax:
    content: public string CreateMarkdownWithFrontmatter(Dictionary<string, object> frontmatter)
    parameters:
    - id: frontmatter
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A dictionary of frontmatter keys and values to serialize as YAML.
    return:
      type: System.String
      description: A markdown string containing only the YAML frontmatter block.
    content.vb: Public Function CreateMarkdownWithFrontmatter(frontmatter As Dictionary(Of String, Object)) As String
  overload: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter*
  nameWithType.vb: MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(Dictionary(Of String, Object))
  fullName.vb: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter(System.Collections.Generic.Dictionary(Of String, Object))
  name.vb: CreateMarkdownWithFrontmatter(Dictionary(Of String, Object))
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)
  commentId: M:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)
  id: BuildNote(System.Collections.Generic.Dictionary{System.String,System.Object},System.String)
  parent: NotebookAutomation.Core.Utils.MarkdownNoteBuilder
  langs:
  - csharp
  - vb
  name: BuildNote(Dictionary<string, object>, string)
  nameWithType: MarkdownNoteBuilder.BuildNote(Dictionary<string, object>, string)
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote(System.Collections.Generic.Dictionary<string, object>, string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: BuildNote
    path: ../src/c-sharp/NotebookAutomation.Core/Utils/MarkdownNoteBuilder.cs
    startLine: 77
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Utils
  summary: Builds a markdown note with both YAML frontmatter and a markdown content body.
  remarks: The frontmatter is always placed at the top of the note, followed by the markdown body.
  example:
  - >-
    ///. <pre><code class="lang-csharp">var frontmatter = new Dictionary&lt;string, object&gt; { ["title"] = "Sample" };
                      string note = builder.BuildNote(frontmatter, "# Heading\nContent");</code></pre>
  syntax:
    content: public string BuildNote(Dictionary<string, object> frontmatter, string body)
    parameters:
    - id: frontmatter
      type: System.Collections.Generic.Dictionary{System.String,System.Object}
      description: A dictionary of frontmatter keys and values to serialize as YAML.
    - id: body
      type: System.String
      description: The markdown content body to append after the frontmatter.
    return:
      type: System.String
      description: A markdown string containing the YAML frontmatter block followed by the content body.
    content.vb: Public Function BuildNote(frontmatter As Dictionary(Of String, Object), body As String) As String
  overload: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote*
  nameWithType.vb: MarkdownNoteBuilder.BuildNote(Dictionary(Of String, Object), String)
  fullName.vb: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote(System.Collections.Generic.Dictionary(Of String, Object), String)
  name.vb: BuildNote(Dictionary(Of String, Object), String)
references:
- uid: NotebookAutomation.Core.Utils.YamlHelper
  commentId: T:NotebookAutomation.Core.Utils.YamlHelper
  href: NotebookAutomation.Core.Utils.YamlHelper.html
  name: YamlHelper
  nameWithType: YamlHelper
  fullName: NotebookAutomation.Core.Utils.YamlHelper
- uid: NotebookAutomation.Core.Utils
  commentId: N:NotebookAutomation.Core.Utils
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Utils
  nameWithType: NotebookAutomation.Core.Utils
  fullName: NotebookAutomation.Core.Utils
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Utils
    name: Utils
    href: NotebookAutomation.Core.Utils.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Utils
    name: Utils
    href: NotebookAutomation.Core.Utils.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor*
  commentId: Overload:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.#ctor
  href: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.html#NotebookAutomation_Core_Utils_MarkdownNoteBuilder__ctor_Microsoft_Extensions_Logging_ILogger_
  name: MarkdownNoteBuilder
  nameWithType: MarkdownNoteBuilder.MarkdownNoteBuilder
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.MarkdownNoteBuilder
  nameWithType.vb: MarkdownNoteBuilder.New
  fullName.vb: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.New
  name.vb: New
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter*
  commentId: Overload:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter
  href: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.html#NotebookAutomation_Core_Utils_MarkdownNoteBuilder_CreateMarkdownWithFrontmatter_System_Collections_Generic_Dictionary_System_String_System_Object__
  name: CreateMarkdownWithFrontmatter
  nameWithType: MarkdownNoteBuilder.CreateMarkdownWithFrontmatter
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.CreateMarkdownWithFrontmatter
- uid: System.Collections.Generic.Dictionary{System.String,System.Object}
  commentId: T:System.Collections.Generic.Dictionary{System.String,System.Object}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<string, object>
  nameWithType: Dictionary<string, object>
  fullName: System.Collections.Generic.Dictionary<string, object>
  nameWithType.vb: Dictionary(Of String, Object)
  fullName.vb: System.Collections.Generic.Dictionary(Of String, Object)
  name.vb: Dictionary(Of String, Object)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: <
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.dictionary-2
  - name: (
  - name: Of
  - name: " "
  - name: TKey
  - name: ','
  - name: " "
  - name: TValue
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote*
  commentId: Overload:NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote
  href: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.html#NotebookAutomation_Core_Utils_MarkdownNoteBuilder_BuildNote_System_Collections_Generic_Dictionary_System_String_System_Object__System_String_
  name: BuildNote
  nameWithType: MarkdownNoteBuilder.BuildNote
  fullName: NotebookAutomation.Core.Utils.MarkdownNoteBuilder.BuildNote
