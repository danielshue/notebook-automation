### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  commentId: T:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  id: MetadataBatchResult
  parent: NotebookAutomation.Core.Tools.Vault
  children:
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
  - NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
  langs:
  - csharp
  - vb
  name: MetadataBatchResult
  nameWithType: MetadataBatchResult
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: MetadataBatchResult
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 363
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Result of batch metadata processing operation.
  example: []
  syntax:
    content: public class MetadataBatchResult
    content.vb: Public Class MetadataBatchResult
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
  id: Success
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: Success
  nameWithType: MetadataBatchResult.Success
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Success
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 368
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets a value indicating whether gets or sets whether the operation was successful.
  example: []
  syntax:
    content: public bool Success { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Success As Boolean
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success*
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
  id: ErrorMessage
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: ErrorMessage
  nameWithType: MetadataBatchResult.ErrorMessage
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ErrorMessage
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 373
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets the error message if the operation failed.
  example: []
  syntax:
    content: public string? ErrorMessage { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Property ErrorMessage As String
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage*
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
  id: TotalFiles
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: TotalFiles
  nameWithType: MetadataBatchResult.TotalFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: TotalFiles
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 378
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets the total number of files found.
  example: []
  syntax:
    content: public int TotalFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TotalFiles As Integer
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles*
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
  id: ProcessedFiles
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: ProcessedFiles
  nameWithType: MetadataBatchResult.ProcessedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessedFiles
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 383
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets the number of files that were processed (updated).
  example: []
  syntax:
    content: public int ProcessedFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property ProcessedFiles As Integer
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles*
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
  id: SkippedFiles
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: SkippedFiles
  nameWithType: MetadataBatchResult.SkippedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: SkippedFiles
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 388
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets the number of files that were skipped (no changes needed).
  example: []
  syntax:
    content: public int SkippedFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property SkippedFiles As Integer
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles*
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
  commentId: P:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
  id: FailedFiles
  parent: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult
  langs:
  - csharp
  - vb
  name: FailedFiles
  nameWithType: MetadataBatchResult.FailedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FailedFiles
    path: src/c-sharp/NotebookAutomation.Core/Tools/Vault/MetadataEnsureBatchProcessor.cs
    startLine: 393
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.Vault
  summary: Gets or sets the number of files that failed to process.
  example: []
  syntax:
    content: public int FailedFiles { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property FailedFiles As Integer
  overload: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles*
references:
- uid: NotebookAutomation.Core.Tools.Vault
  commentId: N:NotebookAutomation.Core.Tools.Vault
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Tools.Vault
  nameWithType: NotebookAutomation.Core.Tools.Vault
  fullName: NotebookAutomation.Core.Tools.Vault
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.Vault
    name: Vault
    href: NotebookAutomation.Core.Tools.Vault.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.Vault
    name: Vault
    href: NotebookAutomation.Core.Tools.Vault.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_Success
  name: Success
  nameWithType: MetadataBatchResult.Success
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.Success
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_ErrorMessage
  name: ErrorMessage
  nameWithType: MetadataBatchResult.ErrorMessage
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ErrorMessage
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_TotalFiles
  name: TotalFiles
  nameWithType: MetadataBatchResult.TotalFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.TotalFiles
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_ProcessedFiles
  name: ProcessedFiles
  nameWithType: MetadataBatchResult.ProcessedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.ProcessedFiles
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_SkippedFiles
  name: SkippedFiles
  nameWithType: MetadataBatchResult.SkippedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.SkippedFiles
- uid: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles*
  commentId: Overload:NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
  href: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.html#NotebookAutomation_Core_Tools_Vault_MetadataBatchResult_FailedFiles
  name: FailedFiles
  nameWithType: MetadataBatchResult.FailedFiles
  fullName: NotebookAutomation.Core.Tools.Vault.MetadataBatchResult.FailedFiles
