### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.ConfigurationSetup
  commentId: T:NotebookAutomation.Core.Configuration.ConfigurationSetup
  id: ConfigurationSetup
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(System.String,System.String,System.String)
  - NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration``1(System.String,System.String)
  langs:
  - csharp
  - vb
  name: ConfigurationSetup
  nameWithType: ConfigurationSetup
  fullName: NotebookAutomation.Core.Configuration.ConfigurationSetup
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ConfigurationSetup
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
    startLine: 21
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: >-
    Provides methods to set up application configuration with support for various sources,

    including JSON files, environment variables, and user secrets.
  remarks: >-
    This class simplifies the process of building a configuration for the application,

    ensuring compatibility with different environments (e.g., development, production).

    It supports optional user secrets and config file paths, making it flexible for

    various deployment scenarios.
  example: []
  syntax:
    content: public static class ConfigurationSetup
    content.vb: Public Module ConfigurationSetup
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(System.String,System.String,System.String)
  commentId: M:NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(System.String,System.String,System.String)
  id: BuildConfiguration(System.String,System.String,System.String)
  parent: NotebookAutomation.Core.Configuration.ConfigurationSetup
  langs:
  - csharp
  - vb
  name: BuildConfiguration(string, string?, string?)
  nameWithType: ConfigurationSetup.BuildConfiguration(string, string?, string?)
  fullName: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(string, string?, string?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: BuildConfiguration
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
    startLine: 30
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Creates a standard configuration with support for config files and user secrets.
  example: []
  syntax:
    content: public static IConfiguration BuildConfiguration(string environment = "Development", string? userSecretsId = null, string? configPath = null)
    parameters:
    - id: environment
      type: System.String
      description: The current environment (development, production, etc.)
    - id: userSecretsId
      type: System.String
      description: Optional user secrets ID. If null, will attempt to use assembly-defined ID.
    - id: configPath
      type: System.String
      description: Optional path to the config file. If null, will search for config.json in standard locations.
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: A configured IConfiguration instance.
    content.vb: Public Shared Function BuildConfiguration(environment As String = "Development", userSecretsId As String = Nothing, configPath As String = Nothing) As IConfiguration
  overload: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration*
  nameWithType.vb: ConfigurationSetup.BuildConfiguration(String, String, String)
  fullName.vb: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(String, String, String)
  name.vb: BuildConfiguration(String, String, String)
- uid: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration``1(System.String,System.String)
  commentId: M:NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration``1(System.String,System.String)
  id: BuildConfiguration``1(System.String,System.String)
  parent: NotebookAutomation.Core.Configuration.ConfigurationSetup
  langs:
  - csharp
  - vb
  name: BuildConfiguration<T>(string, string?)
  nameWithType: ConfigurationSetup.BuildConfiguration<T>(string, string?)
  fullName: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration<T>(string, string?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: BuildConfiguration
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ConfigurationSetup.cs
    startLine: 77
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Creates a configuration with user secrets support for the given assembly type.
  example: []
  syntax:
    content: 'public static IConfiguration BuildConfiguration<T>(string environment = "Development", string? configPath = null) where T : class'
    parameters:
    - id: environment
      type: System.String
      description: The current environment (development, production, etc.)
    - id: configPath
      type: System.String
      description: Optional path to the config file. If null, will search for config.json in standard locations.
    typeParameters:
    - id: T
      description: The type from the assembly that has the UserSecretsId attribute.
    return:
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: A configured IConfiguration instance.
    content.vb: Public Shared Function BuildConfiguration(Of T As Class)(environment As String = "Development", configPath As String = Nothing) As IConfiguration
  overload: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration*
  nameWithType.vb: ConfigurationSetup.BuildConfiguration(Of T)(String, String)
  fullName.vb: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration(Of T)(String, String)
  name.vb: BuildConfiguration(Of T)(String, String)
references:
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration*
  commentId: Overload:NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration
  href: NotebookAutomation.Core.Configuration.ConfigurationSetup.html#NotebookAutomation_Core_Configuration_ConfigurationSetup_BuildConfiguration_System_String_System_String_System_String_
  name: BuildConfiguration
  nameWithType: ConfigurationSetup.BuildConfiguration
  fullName: NotebookAutomation.Core.Configuration.ConfigurationSetup.BuildConfiguration
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
