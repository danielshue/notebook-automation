### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  commentId: T:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  id: PdfNoteBatchProcessor
  parent: NotebookAutomation.Core.Tools.PdfProcessing
  children:
  - NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor})
  - NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean)
  - NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String,NotebookAutomation.Core.Configuration.AppConfig)
  - NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessingProgressChanged
  langs:
  - csharp
  - vb
  name: PdfNoteBatchProcessor
  nameWithType: PdfNoteBatchProcessor
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: PdfNoteBatchProcessor
    path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
    startLine: 45
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.PdfProcessing
  summary: Provides batch processing capabilities for converting multiple PDF files to markdown notes.
  remarks: >-
    <p>

    The PdfNoteBatchProcessor class coordinates the processing of multiple PDF files,

    either from a specified directory or a single file path. It leverages the

    <xref href="NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor" data-throw-if-not-resolved="false"></xref> to handle the details of text extraction

    and note generation for each PDF.

    </p>

    <p>

    This batch processor is responsible for:

    </p>

    <ul><li>Identifying PDF files based on their extensions</li><li>Coordinating the processing of each PDF file</li><li>Managing output directory creation and file writing</li><li>Tracking success and failure counts</li><li>Supporting dry run mode for testing without file writes</li></ul>

    <p>

    The class is designed to be used by both CLI and API interfaces, providing a central

    point for PDF batch processing operations with appropriate logging and error handling.

    This implementation delegates all batch processing logic to the generic

    <xref href="NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor%601" data-throw-if-not-resolved="false"></xref> for maintainability and code reuse.

    </p>
  example: []
  syntax:
    content: public class PdfNoteBatchProcessor
    content.vb: Public Class PdfNoteBatchProcessor
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor})
  commentId: M:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor})
  id: '#ctor(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor})'
  parent: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  langs:
  - csharp
  - vb
  name: PdfNoteBatchProcessor(DocumentNoteBatchProcessor<PdfNoteProcessor>)
  nameWithType: PdfNoteBatchProcessor.PdfNoteBatchProcessor(DocumentNoteBatchProcessor<PdfNoteProcessor>)
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.PdfNoteBatchProcessor(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor<NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor>)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
    startLine: 45
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.PdfProcessing
  summary: Provides batch processing capabilities for converting multiple PDF files to markdown notes.
  remarks: >-
    <p>

    The PdfNoteBatchProcessor class coordinates the processing of multiple PDF files,

    either from a specified directory or a single file path. It leverages the

    <xref href="NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor" data-throw-if-not-resolved="false"></xref> to handle the details of text extraction

    and note generation for each PDF.

    </p>

    <p>

    This batch processor is responsible for:

    </p>

    <ul><li>Identifying PDF files based on their extensions</li><li>Coordinating the processing of each PDF file</li><li>Managing output directory creation and file writing</li><li>Tracking success and failure counts</li><li>Supporting dry run mode for testing without file writes</li></ul>

    <p>

    The class is designed to be used by both CLI and API interfaces, providing a central

    point for PDF batch processing operations with appropriate logging and error handling.

    This implementation delegates all batch processing logic to the generic

    <xref href="NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor%601" data-throw-if-not-resolved="false"></xref> for maintainability and code reuse.

    </p>
  example: []
  syntax:
    content: public PdfNoteBatchProcessor(DocumentNoteBatchProcessor<PdfNoteProcessor> batchProcessor)
    parameters:
    - id: batchProcessor
      type: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor}
      description: The batch processor to use for PDF note processing.
    content.vb: Public Sub New(batchProcessor As DocumentNoteBatchProcessor(Of PdfNoteProcessor))
  overload: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor*
  nameWithType.vb: PdfNoteBatchProcessor.New(DocumentNoteBatchProcessor(Of PdfNoteProcessor))
  fullName.vb: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.New(NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor(Of NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor))
  name.vb: New(DocumentNoteBatchProcessor(Of PdfNoteProcessor))
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessingProgressChanged
  commentId: E:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessingProgressChanged
  id: ProcessingProgressChanged
  parent: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  langs:
  - csharp
  - vb
  name: ProcessingProgressChanged
  nameWithType: PdfNoteBatchProcessor.ProcessingProgressChanged
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessingProgressChanged
  type: Event
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessingProgressChanged
    path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
    startLine: 55
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.PdfProcessing
  summary: Event triggered when processing progress changes.
  example: []
  syntax:
    content: public event EventHandler<DocumentProcessingProgressEventArgs>? ProcessingProgressChanged
    return:
      type: System.EventHandler{NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs}
    content.vb: Public Event ProcessingProgressChanged As EventHandler(Of DocumentProcessingProgressEventArgs)
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean)
  commentId: M:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean)
  id: ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean)
  parent: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  langs:
  - csharp
  - vb
  name: ProcessPdfsAsync(string, string?, List<string>?, string?, bool)
  nameWithType: PdfNoteBatchProcessor.ProcessPdfsAsync(string, string?, List<string>?, string?, bool)
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(string, string?, System.Collections.Generic.List<string>?, string?, bool)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessPdfsAsync
    path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
    startLine: 101
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.PdfProcessing
  summary: Processes one or more PDF files, generating markdown notes for each.
  remarks: >-
    <p>

    This method delegates to the generic <xref href="NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor%601" data-throw-if-not-resolved="false"></xref>

    for all batch processing operations while maintaining backward compatibility with

    existing PDF-specific API.

    </p>
  example:
  - >-
    <pre><code class="lang-csharp">// Process all PDF files in a directory

    var processor = new PdfNoteBatchProcessor(logger);

    var result = await processor.ProcessPdfsAsync(
        "path/to/pdfs",
        "path/to/notes",
        new List&lt;string&gt; { ".pdf" },
        "sk-yourapikeyhere");

    Console.WriteLine($"Processed: {result.processed}, Failed: {result.failed}");</code></pre>
  syntax:
    content: public Task<BatchProcessResult> ProcessPdfsAsync(string input, string? output, List<string>? pdfExtensions = null, string? openAiApiKey = null, bool dryRun = false)
    parameters:
    - id: input
      type: System.String
      description: Input file path or directory containing PDF files.
    - id: output
      type: System.String
      description: Output directory where markdown notes will be saved.
    - id: pdfExtensions
      type: System.Collections.Generic.List{System.String}
      description: List of file extensions to recognize as PDF files (defaults to [".pdf"]).
    - id: openAiApiKey
      type: System.String
      description: Optional OpenAI API key for generating summaries.
    - id: dryRun
      type: System.Boolean
      description: If true, simulates processing without writing output files.
    return:
      type: System.Threading.Tasks.Task{NotebookAutomation.Core.Tools.Shared.BatchProcessResult}
      description: A tuple containing the count of successfully processed files and the count of failures.
    content.vb: Public Function ProcessPdfsAsync(input As String, output As String, pdfExtensions As List(Of String) = Nothing, openAiApiKey As String = Nothing, dryRun As Boolean = False) As Task(Of BatchProcessResult)
  overload: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync*
  nameWithType.vb: PdfNoteBatchProcessor.ProcessPdfsAsync(String, String, List(Of String), String, Boolean)
  fullName.vb: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(String, String, System.Collections.Generic.List(Of String), String, Boolean)
  name.vb: ProcessPdfsAsync(String, String, List(Of String), String, Boolean)
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String,NotebookAutomation.Core.Configuration.AppConfig)
  commentId: M:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String,NotebookAutomation.Core.Configuration.AppConfig)
  id: ProcessPdfsAsync(System.String,System.String,System.Collections.Generic.List{System.String},System.String,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Nullable{System.Int32},System.String,NotebookAutomation.Core.Configuration.AppConfig)
  parent: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  langs:
  - csharp
  - vb
  name: ProcessPdfsAsync(string, string?, List<string>?, string?, bool, bool, bool, bool, int?, string?, AppConfig?)
  nameWithType: PdfNoteBatchProcessor.ProcessPdfsAsync(string, string?, List<string>?, string?, bool, bool, bool, bool, int?, string?, AppConfig?)
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(string, string?, System.Collections.Generic.List<string>?, string?, bool, bool, bool, bool, int?, string?, NotebookAutomation.Core.Configuration.AppConfig?)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ProcessPdfsAsync
    path: src/c-sharp/NotebookAutomation.Core/Tools/PdfProcessing/PdfNoteBatchProcessor.cs
    startLine: 153
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Tools.PdfProcessing
  summary: Processes one or more PDF files, generating markdown notes for each, with extended options.
  example: []
  syntax:
    content: public Task<BatchProcessResult> ProcessPdfsAsync(string input, string? output, List<string>? pdfExtensions, string? openAiApiKey, bool dryRun = false, bool noSummary = false, bool forceOverwrite = false, bool retryFailed = false, int? timeoutSeconds = null, string? resourcesRoot = null, AppConfig? appConfig = null)
    parameters:
    - id: input
      type: System.String
      description: Input file path or directory containing PDF files.
    - id: output
      type: System.String
      description: Output directory where markdown notes will be saved.
    - id: pdfExtensions
      type: System.Collections.Generic.List{System.String}
      description: List of file extensions to recognize as PDF files (defaults to [".pdf"]).
    - id: openAiApiKey
      type: System.String
      description: Optional OpenAI API key for generating summaries.
    - id: dryRun
      type: System.Boolean
      description: If true, simulates processing without writing output files.
    - id: noSummary
      type: System.Boolean
      description: If true, disables OpenAI summary generation.
    - id: forceOverwrite
      type: System.Boolean
      description: If true, overwrites existing notes.
    - id: retryFailed
      type: System.Boolean
      description: If true, retries only failed files from previous run.
    - id: timeoutSeconds
      type: System.Nullable{System.Int32}
      description: Optional API request timeout in seconds.
    - id: resourcesRoot
      type: System.String
      description: Optional override for OneDrive fullpath root directory.
    - id: appConfig
      type: NotebookAutomation.Core.Configuration.AppConfig
      description: The application configuration object.
    return:
      type: System.Threading.Tasks.Task{NotebookAutomation.Core.Tools.Shared.BatchProcessResult}
      description: A tuple containing the count of successfully processed files and the count of failures.
    content.vb: Public Function ProcessPdfsAsync(input As String, output As String, pdfExtensions As List(Of String), openAiApiKey As String, dryRun As Boolean = False, noSummary As Boolean = False, forceOverwrite As Boolean = False, retryFailed As Boolean = False, timeoutSeconds As Integer? = Nothing, resourcesRoot As String = Nothing, appConfig As AppConfig = Nothing) As Task(Of BatchProcessResult)
  overload: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync*
  nameWithType.vb: PdfNoteBatchProcessor.ProcessPdfsAsync(String, String, List(Of String), String, Boolean, Boolean, Boolean, Boolean, Integer?, String, AppConfig)
  fullName.vb: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync(String, String, System.Collections.Generic.List(Of String), String, Boolean, Boolean, Boolean, Boolean, Integer?, String, NotebookAutomation.Core.Configuration.AppConfig)
  name.vb: ProcessPdfsAsync(String, String, List(Of String), String, Boolean, Boolean, Boolean, Boolean, Integer?, String, AppConfig)
references:
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor
  commentId: T:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor
  href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor.html
  name: PdfNoteProcessor
  nameWithType: PdfNoteProcessor
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor
- uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
  commentId: T:NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
  href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  name: DocumentNoteBatchProcessor<TProcessor>
  nameWithType: DocumentNoteBatchProcessor<TProcessor>
  fullName: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor<TProcessor>
  nameWithType.vb: DocumentNoteBatchProcessor(Of TProcessor)
  fullName.vb: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor(Of TProcessor)
  name.vb: DocumentNoteBatchProcessor(Of TProcessor)
  spec.csharp:
  - uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
    name: DocumentNoteBatchProcessor
    href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  - name: <
  - name: TProcessor
  - name: '>'
  spec.vb:
  - uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
    name: DocumentNoteBatchProcessor
    href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TProcessor
  - name: )
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  commentId: T:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
  href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.html
  name: PdfNoteBatchProcessor
  nameWithType: PdfNoteBatchProcessor
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor
- uid: NotebookAutomation.Core.Tools.PdfProcessing
  commentId: N:NotebookAutomation.Core.Tools.PdfProcessing
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Tools.PdfProcessing
  nameWithType: NotebookAutomation.Core.Tools.PdfProcessing
  fullName: NotebookAutomation.Core.Tools.PdfProcessing
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.PdfProcessing
    name: PdfProcessing
    href: NotebookAutomation.Core.Tools.PdfProcessing.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.PdfProcessing
    name: PdfProcessing
    href: NotebookAutomation.Core.Tools.PdfProcessing.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor*
  commentId: Overload:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.#ctor
  href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.html#NotebookAutomation_Core_Tools_PdfProcessing_PdfNoteBatchProcessor__ctor_NotebookAutomation_Core_Tools_Shared_DocumentNoteBatchProcessor_NotebookAutomation_Core_Tools_PdfProcessing_PdfNoteProcessor__
  name: PdfNoteBatchProcessor
  nameWithType: PdfNoteBatchProcessor.PdfNoteBatchProcessor
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.PdfNoteBatchProcessor
  nameWithType.vb: PdfNoteBatchProcessor.New
  fullName.vb: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.New
  name.vb: New
- uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor}
  commentId: T:NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor{NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor}
  parent: NotebookAutomation.Core.Tools.Shared
  definition: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
  href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  name: DocumentNoteBatchProcessor<PdfNoteProcessor>
  nameWithType: DocumentNoteBatchProcessor<PdfNoteProcessor>
  fullName: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor<NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor>
  nameWithType.vb: DocumentNoteBatchProcessor(Of PdfNoteProcessor)
  fullName.vb: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor(Of NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor)
  name.vb: DocumentNoteBatchProcessor(Of PdfNoteProcessor)
  spec.csharp:
  - uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
    name: DocumentNoteBatchProcessor
    href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  - name: <
  - uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor
    name: PdfNoteProcessor
    href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor.html
  - name: '>'
  spec.vb:
  - uid: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor`1
    name: DocumentNoteBatchProcessor
    href: NotebookAutomation.Core.Tools.Shared.DocumentNoteBatchProcessor-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor
    name: PdfNoteProcessor
    href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteProcessor.html
  - name: )
- uid: NotebookAutomation.Core.Tools.Shared
  commentId: N:NotebookAutomation.Core.Tools.Shared
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Tools.Shared
  nameWithType: NotebookAutomation.Core.Tools.Shared
  fullName: NotebookAutomation.Core.Tools.Shared
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.Shared
    name: Shared
    href: NotebookAutomation.Core.Tools.Shared.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Tools
    name: Tools
    href: NotebookAutomation.Core.Tools.html
  - name: .
  - uid: NotebookAutomation.Core.Tools.Shared
    name: Shared
    href: NotebookAutomation.Core.Tools.Shared.html
- uid: System.EventHandler{NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs}
  commentId: T:System.EventHandler{NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs}
  parent: System
  definition: System.EventHandler`1
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<DocumentProcessingProgressEventArgs>
  nameWithType: EventHandler<DocumentProcessingProgressEventArgs>
  fullName: System.EventHandler<NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs>
  nameWithType.vb: EventHandler(Of DocumentProcessingProgressEventArgs)
  fullName.vb: System.EventHandler(Of NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs)
  name.vb: EventHandler(Of DocumentProcessingProgressEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - uid: NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs
    name: DocumentProcessingProgressEventArgs
    href: NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs.html
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - uid: NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs
    name: DocumentProcessingProgressEventArgs
    href: NotebookAutomation.Core.Models.DocumentProcessingProgressEventArgs.html
  - name: )
- uid: System.EventHandler`1
  commentId: T:System.EventHandler`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  name: EventHandler<TEventArgs>
  nameWithType: EventHandler<TEventArgs>
  fullName: System.EventHandler<TEventArgs>
  nameWithType.vb: EventHandler(Of TEventArgs)
  fullName.vb: System.EventHandler(Of TEventArgs)
  name.vb: EventHandler(Of TEventArgs)
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: <
  - name: TEventArgs
  - name: '>'
  spec.vb:
  - uid: System.EventHandler`1
    name: EventHandler
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.eventhandler-1
  - name: (
  - name: Of
  - name: " "
  - name: TEventArgs
  - name: )
- uid: NotebookAutomation.Core.Tools.Shared.BatchProcessResult
  commentId: T:NotebookAutomation.Core.Tools.Shared.BatchProcessResult
  parent: NotebookAutomation.Core.Tools.Shared
  href: NotebookAutomation.Core.Tools.Shared.BatchProcessResult.html
  name: BatchProcessResult
  nameWithType: BatchProcessResult
  fullName: NotebookAutomation.Core.Tools.Shared.BatchProcessResult
- uid: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync*
  commentId: Overload:NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync
  href: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.html#NotebookAutomation_Core_Tools_PdfProcessing_PdfNoteBatchProcessor_ProcessPdfsAsync_System_String_System_String_System_Collections_Generic_List_System_String__System_String_System_Boolean_
  name: ProcessPdfsAsync
  nameWithType: PdfNoteBatchProcessor.ProcessPdfsAsync
  fullName: NotebookAutomation.Core.Tools.PdfProcessing.PdfNoteBatchProcessor.ProcessPdfsAsync
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Threading.Tasks.Task{NotebookAutomation.Core.Tools.Shared.BatchProcessResult}
  commentId: T:System.Threading.Tasks.Task{NotebookAutomation.Core.Tools.Shared.BatchProcessResult}
  parent: System.Threading.Tasks
  definition: System.Threading.Tasks.Task`1
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<BatchProcessResult>
  nameWithType: Task<BatchProcessResult>
  fullName: System.Threading.Tasks.Task<NotebookAutomation.Core.Tools.Shared.BatchProcessResult>
  nameWithType.vb: Task(Of BatchProcessResult)
  fullName.vb: System.Threading.Tasks.Task(Of NotebookAutomation.Core.Tools.Shared.BatchProcessResult)
  name.vb: Task(Of BatchProcessResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - uid: NotebookAutomation.Core.Tools.Shared.BatchProcessResult
    name: BatchProcessResult
    href: NotebookAutomation.Core.Tools.Shared.BatchProcessResult.html
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - uid: NotebookAutomation.Core.Tools.Shared.BatchProcessResult
    name: BatchProcessResult
    href: NotebookAutomation.Core.Tools.Shared.BatchProcessResult.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: System.Threading.Tasks.Task`1
  commentId: T:System.Threading.Tasks.Task`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  name: Task<TResult>
  nameWithType: Task<TResult>
  fullName: System.Threading.Tasks.Task<TResult>
  nameWithType.vb: Task(Of TResult)
  fullName.vb: System.Threading.Tasks.Task(Of TResult)
  name.vb: Task(Of TResult)
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: <
  - name: TResult
  - name: '>'
  spec.vb:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks.task-1
  - name: (
  - name: Of
  - name: " "
  - name: TResult
  - name: )
- uid: System.Threading.Tasks
  commentId: N:System.Threading.Tasks
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Threading.Tasks
  nameWithType: System.Threading.Tasks
  fullName: System.Threading.Tasks
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Threading
    name: Threading
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading
  - name: .
  - uid: System.Threading.Tasks
    name: Tasks
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.threading.tasks
- uid: System.Nullable{System.Int32}
  commentId: T:System.Nullable{System.Int32}
  parent: System
  definition: System.Nullable`1
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int?
  nameWithType: int?
  fullName: int?
  nameWithType.vb: Integer?
  fullName.vb: Integer?
  name.vb: Integer?
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '?'
- uid: NotebookAutomation.Core.Configuration.AppConfig
  commentId: T:NotebookAutomation.Core.Configuration.AppConfig
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.AppConfig.html
  name: AppConfig
  nameWithType: AppConfig
  fullName: NotebookAutomation.Core.Configuration.AppConfig
- uid: System.Nullable`1
  commentId: T:System.Nullable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  name: Nullable<T>
  nameWithType: Nullable<T>
  fullName: System.Nullable<T>
  nameWithType.vb: Nullable(Of T)
  fullName.vb: System.Nullable(Of T)
  name.vb: Nullable(Of T)
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Nullable`1
    name: Nullable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.nullable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
