### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper
  commentId: T:NotebookAutomation.Core.Configuration.UserSecretsHelper
  id: UserSecretsHelper
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret(System.String)
  - NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret(System.String)
  langs:
  - csharp
  - vb
  name: UserSecretsHelper
  nameWithType: UserSecretsHelper
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: UserSecretsHelper
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 20
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Provides convenient access to user secrets in the application.
  remarks: >-
    The <code>UserSecretsHelper</code> class simplifies the retrieval of sensitive information

    stored in user secrets, such as API keys and client credentials. It leverages the

    application's configuration system to access these secrets securely.
  example: []
  syntax:
    content: public class UserSecretsHelper
    content.vb: Public Class UserSecretsHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor(Microsoft.Extensions.Configuration.IConfiguration)
  id: '#ctor(Microsoft.Extensions.Configuration.IConfiguration)'
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: UserSecretsHelper(IConfiguration)
  nameWithType: UserSecretsHelper.UserSecretsHelper(IConfiguration)
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.UserSecretsHelper(Microsoft.Extensions.Configuration.IConfiguration)
  type: Constructor
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: .ctor
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 20
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Provides convenient access to user secrets in the application.
  remarks: >-
    The <code>UserSecretsHelper</code> class simplifies the retrieval of sensitive information

    stored in user secrets, such as API keys and client credentials. It leverages the

    application's configuration system to access these secrets securely.
  example: []
  syntax:
    content: public UserSecretsHelper(IConfiguration configuration)
    parameters:
    - id: configuration
      type: Microsoft.Extensions.Configuration.IConfiguration
      description: The configuration to use for accessing user secrets.
    content.vb: Public Sub New(configuration As IConfiguration)
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor*
  nameWithType.vb: UserSecretsHelper.New(IConfiguration)
  fullName.vb: NotebookAutomation.Core.Configuration.UserSecretsHelper.New(Microsoft.Extensions.Configuration.IConfiguration)
  name.vb: New(IConfiguration)
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey
  id: GetOpenAIApiKey
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: GetOpenAIApiKey()
  nameWithType: UserSecretsHelper.GetOpenAIApiKey()
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetOpenAIApiKey
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 28
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets an OpenAI API key from user secrets, if available.
  example: []
  syntax:
    content: public string? GetOpenAIApiKey()
    return:
      type: System.String
      description: The API key if found in user secrets; otherwise, null.
    content.vb: Public Function GetOpenAIApiKey() As String
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey*
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId
  id: GetMicrosoftGraphClientId
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: GetMicrosoftGraphClientId()
  nameWithType: UserSecretsHelper.GetMicrosoftGraphClientId()
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetMicrosoftGraphClientId
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 37
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets a Microsoft Graph client ID from user secrets, if available.
  example: []
  syntax:
    content: public string? GetMicrosoftGraphClientId()
    return:
      type: System.String
      description: The client ID if found in user secrets; otherwise, null.
    content.vb: Public Function GetMicrosoftGraphClientId() As String
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId*
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId
  id: GetMicrosoftGraphTenantId
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: GetMicrosoftGraphTenantId()
  nameWithType: UserSecretsHelper.GetMicrosoftGraphTenantId()
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetMicrosoftGraphTenantId
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 46
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets a Microsoft Graph tenant ID from user secrets, if available.
  example: []
  syntax:
    content: public string? GetMicrosoftGraphTenantId()
    return:
      type: System.String
      description: The tenant ID if found in user secrets; otherwise, null.
    content.vb: Public Function GetMicrosoftGraphTenantId() As String
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId*
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret(System.String)
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret(System.String)
  id: GetSecret(System.String)
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: GetSecret(string)
  nameWithType: UserSecretsHelper.GetSecret(string)
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret(string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetSecret
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 56
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets any user secret by key.
  example: []
  syntax:
    content: public string? GetSecret(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the user secret to get.
    return:
      type: System.String
      description: The value if found; otherwise, null.
    content.vb: Public Function GetSecret(key As String) As String
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret*
  nameWithType.vb: UserSecretsHelper.GetSecret(String)
  fullName.vb: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret(String)
  name.vb: GetSecret(String)
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret(System.String)
  commentId: M:NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret(System.String)
  id: HasSecret(System.String)
  parent: NotebookAutomation.Core.Configuration.UserSecretsHelper
  langs:
  - csharp
  - vb
  name: HasSecret(string)
  nameWithType: UserSecretsHelper.HasSecret(string)
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret(string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: HasSecret
    path: src/c-sharp/NotebookAutomation.Core/Configuration/UserSecretsHelper.cs
    startLine: 66
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Determines whether a specific user secret exists.
  example: []
  syntax:
    content: public bool HasSecret(string key)
    parameters:
    - id: key
      type: System.String
      description: The key of the user secret to check.
    return:
      type: System.Boolean
      description: True if the user secret exists; otherwise, false.
    content.vb: Public Function HasSecret(key As String) As Boolean
  overload: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret*
  nameWithType.vb: UserSecretsHelper.HasSecret(String)
  fullName.vb: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret(String)
  name.vb: HasSecret(String)
references:
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.#ctor
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper__ctor_Microsoft_Extensions_Configuration_IConfiguration_
  name: UserSecretsHelper
  nameWithType: UserSecretsHelper.UserSecretsHelper
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.UserSecretsHelper
  nameWithType.vb: UserSecretsHelper.New
  fullName.vb: NotebookAutomation.Core.Configuration.UserSecretsHelper.New
  name.vb: New
- uid: Microsoft.Extensions.Configuration.IConfiguration
  commentId: T:Microsoft.Extensions.Configuration.IConfiguration
  parent: Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration.iconfiguration
  name: IConfiguration
  nameWithType: IConfiguration
  fullName: Microsoft.Extensions.Configuration.IConfiguration
- uid: Microsoft.Extensions.Configuration
  commentId: N:Microsoft.Extensions.Configuration
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Configuration
  nameWithType: Microsoft.Extensions.Configuration
  fullName: Microsoft.Extensions.Configuration
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Configuration
    name: Configuration
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.configuration
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper_GetOpenAIApiKey
  name: GetOpenAIApiKey
  nameWithType: UserSecretsHelper.GetOpenAIApiKey
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetOpenAIApiKey
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper_GetMicrosoftGraphClientId
  name: GetMicrosoftGraphClientId
  nameWithType: UserSecretsHelper.GetMicrosoftGraphClientId
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphClientId
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper_GetMicrosoftGraphTenantId
  name: GetMicrosoftGraphTenantId
  nameWithType: UserSecretsHelper.GetMicrosoftGraphTenantId
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetMicrosoftGraphTenantId
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper_GetSecret_System_String_
  name: GetSecret
  nameWithType: UserSecretsHelper.GetSecret
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.GetSecret
- uid: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret*
  commentId: Overload:NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret
  href: NotebookAutomation.Core.Configuration.UserSecretsHelper.html#NotebookAutomation_Core_Configuration_UserSecretsHelper_HasSecret_System_String_
  name: HasSecret
  nameWithType: UserSecretsHelper.HasSecret
  fullName: NotebookAutomation.Core.Configuration.UserSecretsHelper.HasSecret
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
