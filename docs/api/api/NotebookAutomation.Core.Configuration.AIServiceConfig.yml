### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig
  commentId: T:NotebookAutomation.Core.Configuration.AIServiceConfig
  id: AIServiceConfig
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
  - NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
  - NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
  - NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey
  - NotebookAutomation.Core.Configuration.AIServiceConfig.Model
  - NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
  - NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
  langs:
  - csharp
  - vb
  name: AIServiceConfig
  nameWithType: AIServiceConfig
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: AIServiceConfig
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 24
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Represents the configuration for AI services, supporting multiple providers such as OpenAI, Azure, and Foundry.
  remarks: >-
    API keys are not stored in configuration files. Use environment variables or user-secrets:

    <ul><li>OpenAI: OPENAI_API_KEY</li><li>Azure: AZURE_OPEN_AI_API_KEY</li><li>Foundry: FOUNDRY_API_KEY</li></ul>
  example: []
  syntax:
    content: public class AIServiceConfig
    content.vb: Public Class AIServiceConfig
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
  id: Provider
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: Provider
  nameWithType: AIServiceConfig.Provider
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Provider
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 29
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets or sets the provider name (e.g., OpenAI, Azure, Foundry).
  example: []
  syntax:
    content: >-
      [JsonPropertyName("provider")]

      public string? Provider { get; set; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("provider")>

      Public Property Provider As String
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.Provider*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: provider
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
  id: OpenAI
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: OpenAI
  nameWithType: AIServiceConfig.OpenAI
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: OpenAI
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 35
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets or sets the configuration for OpenAI provider.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("openai")]

      public OpenAiProviderConfig? OpenAI { get; set; }
    parameters: []
    return:
      type: NotebookAutomation.Core.Configuration.OpenAiProviderConfig
    content.vb: >-
      <JsonPropertyName("openai")>

      Public Property OpenAI As OpenAiProviderConfig
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: openai
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
  id: Azure
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: Azure
  nameWithType: AIServiceConfig.Azure
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Azure
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 41
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets or sets the configuration for Azure provider.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("azure")]

      public AzureProviderConfig? Azure { get; set; }
    parameters: []
    return:
      type: NotebookAutomation.Core.Configuration.AzureProviderConfig
    content.vb: >-
      <JsonPropertyName("azure")>

      Public Property Azure As AzureProviderConfig
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.Azure*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: azure
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
  id: Foundry
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: Foundry
  nameWithType: AIServiceConfig.Foundry
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Foundry
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 47
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets or sets the configuration for Foundry provider.
  example: []
  syntax:
    content: >-
      [JsonPropertyName("foundry")]

      public FoundryProviderConfig? Foundry { get; set; }
    parameters: []
    return:
      type: NotebookAutomation.Core.Configuration.FoundryProviderConfig
    content.vb: >-
      <JsonPropertyName("foundry")>

      Public Property Foundry As FoundryProviderConfig
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: foundry
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey
  commentId: M:NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey
  id: GetApiKey
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: GetApiKey()
  nameWithType: AIServiceConfig.GetApiKey()
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetApiKey
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 54
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Returns the API key for the configured AI provider.
  example: []
  syntax:
    content: public string? GetApiKey()
    return:
      type: System.String
      description: The API key string, or null if not set.
    content.vb: Public Function GetApiKey() As String
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey*
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Model
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.Model
  id: Model
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: Model
  nameWithType: AIServiceConfig.Model
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Model
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Model
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 72
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the model for the active provider.
  remarks: This allows direct access via indexer like appConfig["aiservice:Model"].
  example: []
  syntax:
    content: >-
      [JsonIgnore]

      public string? Model { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonIgnore>

      Public ReadOnly Property Model As String
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.Model*
  attributes:
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
  commentId: P:NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
  id: ApiKey
  parent: NotebookAutomation.Core.Configuration.AIServiceConfig
  langs:
  - csharp
  - vb
  name: ApiKey
  nameWithType: AIServiceConfig.ApiKey
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ApiKey
    path: src/c-sharp/NotebookAutomation.Core/Configuration/AIServiceConfig.cs
    startLine: 94
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the API key for the active provider.
  remarks: This allows direct access via indexer like appConfig["aiservice:api_key"].
  example: []
  syntax:
    content: >-
      [JsonPropertyName("api_key")]

      [JsonIgnore]

      public string? ApiKey { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <JsonPropertyName("api_key")>

      <JsonIgnore>

      Public ReadOnly Property ApiKey As String
  overload: NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey*
  attributes:
  - type: System.Text.Json.Serialization.JsonPropertyNameAttribute
    ctor: System.Text.Json.Serialization.JsonPropertyNameAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: api_key
  - type: System.Text.Json.Serialization.JsonIgnoreAttribute
    ctor: System.Text.Json.Serialization.JsonIgnoreAttribute.#ctor
    arguments: []
references:
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Provider*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_Provider
  name: Provider
  nameWithType: AIServiceConfig.Provider
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Provider
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_OpenAI
  name: OpenAI
  nameWithType: AIServiceConfig.OpenAI
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.OpenAI
- uid: NotebookAutomation.Core.Configuration.OpenAiProviderConfig
  commentId: T:NotebookAutomation.Core.Configuration.OpenAiProviderConfig
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.OpenAiProviderConfig.html
  name: OpenAiProviderConfig
  nameWithType: OpenAiProviderConfig
  fullName: NotebookAutomation.Core.Configuration.OpenAiProviderConfig
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Azure*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_Azure
  name: Azure
  nameWithType: AIServiceConfig.Azure
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Azure
- uid: NotebookAutomation.Core.Configuration.AzureProviderConfig
  commentId: T:NotebookAutomation.Core.Configuration.AzureProviderConfig
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.AzureProviderConfig.html
  name: AzureProviderConfig
  nameWithType: AzureProviderConfig
  fullName: NotebookAutomation.Core.Configuration.AzureProviderConfig
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_Foundry
  name: Foundry
  nameWithType: AIServiceConfig.Foundry
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Foundry
- uid: NotebookAutomation.Core.Configuration.FoundryProviderConfig
  commentId: T:NotebookAutomation.Core.Configuration.FoundryProviderConfig
  parent: NotebookAutomation.Core.Configuration
  href: NotebookAutomation.Core.Configuration.FoundryProviderConfig.html
  name: FoundryProviderConfig
  nameWithType: FoundryProviderConfig
  fullName: NotebookAutomation.Core.Configuration.FoundryProviderConfig
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_GetApiKey
  name: GetApiKey
  nameWithType: AIServiceConfig.GetApiKey
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.GetApiKey
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.Model*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.Model
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_Model
  name: Model
  nameWithType: AIServiceConfig.Model
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.Model
- uid: NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey*
  commentId: Overload:NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
  href: NotebookAutomation.Core.Configuration.AIServiceConfig.html#NotebookAutomation_Core_Configuration_AIServiceConfig_ApiKey
  name: ApiKey
  nameWithType: AIServiceConfig.ApiKey
  fullName: NotebookAutomation.Core.Configuration.AIServiceConfig.ApiKey
