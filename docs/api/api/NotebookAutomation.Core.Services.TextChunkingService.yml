### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Services.TextChunkingService
  commentId: T:NotebookAutomation.Core.Services.TextChunkingService
  id: TextChunkingService
  parent: NotebookAutomation.Core.Services
  children:
  - NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount(System.String)
  - NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  langs:
  - csharp
  - vb
  name: TextChunkingService
  nameWithType: TextChunkingService
  fullName: NotebookAutomation.Core.Services.TextChunkingService
  type: Class
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: TextChunkingService
    path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
    startLine: 42
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: >-
    Provides text chunking operations for AI summarization services.

    Implements intelligent text splitting with overlap to maintain context continuity.
  example: []
  syntax:
    content: 'public class TextChunkingService : ITextChunkingService'
    content.vb: Public Class TextChunkingService Implements ITextChunkingService
  inheritance:
  - System.Object
  implements:
  - NotebookAutomation.Core.Services.ITextChunkingService
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
- uid: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  commentId: M:NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  id: SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  parent: NotebookAutomation.Core.Services.TextChunkingService
  langs:
  - csharp
  - vb
  name: SplitTextIntoChunks(string, int, int)
  nameWithType: TextChunkingService.SplitTextIntoChunks(string, int, int)
  fullName: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks(string, int, int)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: SplitTextIntoChunks
    path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
    startLine: 54
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: >-
    Splits text into chunks with overlap for optimal processing.

    Uses character-based chunking with intelligent boundary detection.
  example: []
  syntax:
    content: public List<string> SplitTextIntoChunks(string text, int chunkSize, int overlap)
    parameters:
    - id: text
      type: System.String
      description: The text to split.
    - id: chunkSize
      type: System.Int32
      description: Maximum size of each chunk in characters.
    - id: overlap
      type: System.Int32
      description: Number of characters to overlap between chunks.
    return:
      type: System.Collections.Generic.List{System.String}
      description: List of text chunks.
    content.vb: Public Function SplitTextIntoChunks(text As String, chunkSize As Integer, overlap As Integer) As List(Of String)
  overload: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: Thrown when text is null.
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: Thrown when chunkSize or overlap are invalid.
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: Thrown when overlap is greater than or equal to chunkSize.
  implements:
  - NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  nameWithType.vb: TextChunkingService.SplitTextIntoChunks(String, Integer, Integer)
  fullName.vb: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks(String, Integer, Integer)
  name.vb: SplitTextIntoChunks(String, Integer, Integer)
- uid: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount(System.String)
  commentId: M:NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount(System.String)
  id: EstimateTokenCount(System.String)
  parent: NotebookAutomation.Core.Services.TextChunkingService
  langs:
  - csharp
  - vb
  name: EstimateTokenCount(string)
  nameWithType: TextChunkingService.EstimateTokenCount(string)
  fullName: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount(string)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: EstimateTokenCount
    path: src/c-sharp/NotebookAutomation.Core/Services/TextChunkingService.cs
    startLine: 116
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Services
  summary: >-
    Estimates the token count for the given text using a character-based heuristic.

    Uses approximately 4 characters per token as a rough estimate for English text.
  remarks: >-
    <p>

    This is a simplified estimation method that provides reasonable approximations for:

    </p>

    <ul><li>English academic text (typical in MBA coursework)</li><li>Mixed alphanumeric content</li><li>Standard punctuation and formatting</li></ul>        ///. <p>

    The 4:1 character-to-token ratio is a conservative estimate that works well for OpenAI models.

    Actual token counts may vary based on text complexity, language, and specific tokenizer implementation.

    </p>
  example: []
  syntax:
    content: public int EstimateTokenCount(string text)
    parameters:
    - id: text
      type: System.String
      description: The text to estimate tokens for.
    return:
      type: System.Int32
      description: The estimated token count based on character length, or 0 if the text is null or whitespace.
    content.vb: Public Function EstimateTokenCount(text As String) As Integer
  overload: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount*
  implements:
  - NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(System.String)
  nameWithType.vb: TextChunkingService.EstimateTokenCount(String)
  fullName.vb: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount(String)
  name.vb: EstimateTokenCount(String)
references:
- uid: NotebookAutomation.Core.Services
  commentId: N:NotebookAutomation.Core.Services
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Services
  nameWithType: NotebookAutomation.Core.Services
  fullName: NotebookAutomation.Core.Services
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Services
    name: Services
    href: NotebookAutomation.Core.Services.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Services
    name: Services
    href: NotebookAutomation.Core.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: NotebookAutomation.Core.Services.ITextChunkingService
  commentId: T:NotebookAutomation.Core.Services.ITextChunkingService
  parent: NotebookAutomation.Core.Services
  href: NotebookAutomation.Core.Services.ITextChunkingService.html
  name: ITextChunkingService
  nameWithType: ITextChunkingService
  fullName: NotebookAutomation.Core.Services.ITextChunkingService
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.ArgumentNullException
  commentId: T:System.ArgumentNullException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentnullexception
  name: ArgumentNullException
  nameWithType: ArgumentNullException
  fullName: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  commentId: T:System.ArgumentOutOfRangeException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentoutofrangeexception
  name: ArgumentOutOfRangeException
  nameWithType: ArgumentOutOfRangeException
  fullName: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  commentId: T:System.ArgumentException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.argumentexception
  name: ArgumentException
  nameWithType: ArgumentException
  fullName: System.ArgumentException
- uid: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks*
  commentId: Overload:NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks
  href: NotebookAutomation.Core.Services.TextChunkingService.html#NotebookAutomation_Core_Services_TextChunkingService_SplitTextIntoChunks_System_String_System_Int32_System_Int32_
  name: SplitTextIntoChunks
  nameWithType: TextChunkingService.SplitTextIntoChunks
  fullName: NotebookAutomation.Core.Services.TextChunkingService.SplitTextIntoChunks
- uid: NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  commentId: M:NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
  parent: NotebookAutomation.Core.Services.ITextChunkingService
  isExternal: true
  href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_SplitTextIntoChunks_System_String_System_Int32_System_Int32_
  name: SplitTextIntoChunks(string, int, int)
  nameWithType: ITextChunkingService.SplitTextIntoChunks(string, int, int)
  fullName: NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(string, int, int)
  nameWithType.vb: ITextChunkingService.SplitTextIntoChunks(String, Integer, Integer)
  fullName.vb: NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(String, Integer, Integer)
  name.vb: SplitTextIntoChunks(String, Integer, Integer)
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
    name: SplitTextIntoChunks
    href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_SplitTextIntoChunks_System_String_System_Int32_System_Int32_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.ITextChunkingService.SplitTextIntoChunks(System.String,System.Int32,System.Int32)
    name: SplitTextIntoChunks
    href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_SplitTextIntoChunks_System_String_System_Int32_System_Int32_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Collections.Generic.List{System.String}
  commentId: T:System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<string>
  nameWithType: List<string>
  fullName: System.Collections.Generic.List<string>
  nameWithType.vb: List(Of String)
  fullName.vb: System.Collections.Generic.List(Of String)
  name.vb: List(Of String)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount*
  commentId: Overload:NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount
  href: NotebookAutomation.Core.Services.TextChunkingService.html#NotebookAutomation_Core_Services_TextChunkingService_EstimateTokenCount_System_String_
  name: EstimateTokenCount
  nameWithType: TextChunkingService.EstimateTokenCount
  fullName: NotebookAutomation.Core.Services.TextChunkingService.EstimateTokenCount
- uid: NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(System.String)
  commentId: M:NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(System.String)
  parent: NotebookAutomation.Core.Services.ITextChunkingService
  isExternal: true
  href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_EstimateTokenCount_System_String_
  name: EstimateTokenCount(string)
  nameWithType: ITextChunkingService.EstimateTokenCount(string)
  fullName: NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(string)
  nameWithType.vb: ITextChunkingService.EstimateTokenCount(String)
  fullName.vb: NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(String)
  name.vb: EstimateTokenCount(String)
  spec.csharp:
  - uid: NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(System.String)
    name: EstimateTokenCount
    href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_EstimateTokenCount_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: NotebookAutomation.Core.Services.ITextChunkingService.EstimateTokenCount(System.String)
    name: EstimateTokenCount
    href: NotebookAutomation.Core.Services.ITextChunkingService.html#NotebookAutomation_Core_Services_ITextChunkingService_EstimateTokenCount_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
