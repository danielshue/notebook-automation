### YamlMime:ManagedReference
items:
- uid: NotebookAutomation.Core.Configuration.ILoggingService
  commentId: T:NotebookAutomation.Core.Configuration.ILoggingService
  id: ILoggingService
  parent: NotebookAutomation.Core.Configuration
  children:
  - NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  - NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  - NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  - NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  - NotebookAutomation.Core.Configuration.ILoggingService.Logger
  langs:
  - csharp
  - vb
  name: ILoggingService
  nameWithType: ILoggingService
  fullName: NotebookAutomation.Core.Configuration.ILoggingService
  type: Interface
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ILoggingService
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 20
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Defines the contract for a centralized logging service for the notebook automation system.
  remarks: >-
    <p>

    The ILoggingService interface provides methods for creating appropriately configured

    ILogger instances for different parts of the application.

    </p>
  example: []
  syntax:
    content: public interface ILoggingService
    content.vb: Public Interface ILoggingService
- uid: NotebookAutomation.Core.Configuration.ILoggingService.Logger
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.Logger
  id: Logger
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  langs:
  - csharp
  - vb
  name: Logger
  nameWithType: ILoggingService.Logger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.Logger
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: Logger
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 25
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the main logger instance used for general application logging (Microsoft.Extensions.Logging).
  example: []
  syntax:
    content: ILogger Logger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: ReadOnly Property Logger As ILogger
  overload: NotebookAutomation.Core.Configuration.ILoggingService.Logger*
- uid: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  id: FailedLogger
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  langs:
  - csharp
  - vb
  name: FailedLogger
  nameWithType: ILoggingService.FailedLogger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: FailedLogger
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 30
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the specialized logger instance used for recording failed operations (Microsoft.Extensions.Logging).
  example: []
  syntax:
    content: ILogger FailedLogger { get; }
    parameters: []
    return:
      type: Microsoft.Extensions.Logging.ILogger
    content.vb: ReadOnly Property FailedLogger As ILogger
  overload: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger*
- uid: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  commentId: M:NotebookAutomation.Core.Configuration.ILoggingService.GetLogger``1
  id: GetLogger``1
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  langs:
  - csharp
  - vb
  name: GetLogger<T>()
  nameWithType: ILoggingService.GetLogger<T>()
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger<T>()
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: GetLogger
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 37
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets a typed ILogger instance for the specified type T from this LoggingService instance.
  example: []
  syntax:
    content: ILogger<T> GetLogger<T>()
    typeParameters:
    - id: T
      description: The type to create the logger for.
    return:
      type: Microsoft.Extensions.Logging.ILogger{{T}}
      description: An ILogger{T} configured for the specified type.
    content.vb: Function GetLogger(Of T)() As ILogger(Of T)
  overload: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger*
  nameWithType.vb: ILoggingService.GetLogger(Of T)()
  fullName.vb: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger(Of T)()
  name.vb: GetLogger(Of T)()
- uid: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  commentId: M:NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  id: ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  langs:
  - csharp
  - vb
  name: ConfigureLogging(ILoggingBuilder)
  nameWithType: ILoggingService.ConfigureLogging(ILoggingBuilder)
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging(Microsoft.Extensions.Logging.ILoggingBuilder)
  type: Method
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: ConfigureLogging
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 43
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Configures the logging builder with the appropriate providers.
  example: []
  syntax:
    content: void ConfigureLogging(ILoggingBuilder builder)
    parameters:
    - id: builder
      type: Microsoft.Extensions.Logging.ILoggingBuilder
      description: The logging builder to configure.
    content.vb: Sub ConfigureLogging(builder As ILoggingBuilder)
  overload: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging*
- uid: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  commentId: P:NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  id: CurrentLogFilePath
  parent: NotebookAutomation.Core.Configuration.ILoggingService
  langs:
  - csharp
  - vb
  name: CurrentLogFilePath
  nameWithType: ILoggingService.CurrentLogFilePath
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  type: Property
  source:
    remote:
      path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
      branch: master
      repo: https://github.com/danielshue/notebook-automation.git
    id: CurrentLogFilePath
    path: src/c-sharp/NotebookAutomation.Core/Configuration/ILoggingService.cs
    startLine: 49
  assemblies:
  - NotebookAutomation.Core
  namespace: NotebookAutomation.Core.Configuration
  summary: Gets the full path to the current log file.
  example: []
  syntax:
    content: string? CurrentLogFilePath { get; }
    parameters: []
    return:
      type: System.String
      description: The absolute path to the current log file, or null if logging is not configured to a file.
    content.vb: ReadOnly Property CurrentLogFilePath As String
  overload: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath*
references:
- uid: NotebookAutomation.Core.Configuration
  commentId: N:NotebookAutomation.Core.Configuration
  href: NotebookAutomation.html
  name: NotebookAutomation.Core.Configuration
  nameWithType: NotebookAutomation.Core.Configuration
  fullName: NotebookAutomation.Core.Configuration
  spec.csharp:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
  spec.vb:
  - uid: NotebookAutomation
    name: NotebookAutomation
    href: NotebookAutomation.html
  - name: .
  - uid: NotebookAutomation.Core
    name: Core
    href: NotebookAutomation.Core.html
  - name: .
  - uid: NotebookAutomation.Core.Configuration
    name: Configuration
    href: NotebookAutomation.Core.Configuration.html
- uid: NotebookAutomation.Core.Configuration.ILoggingService.Logger*
  commentId: Overload:NotebookAutomation.Core.Configuration.ILoggingService.Logger
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_Logger
  name: Logger
  nameWithType: ILoggingService.Logger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.Logger
- uid: Microsoft.Extensions.Logging.ILogger
  commentId: T:Microsoft.Extensions.Logging.ILogger
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger
  name: ILogger
  nameWithType: ILogger
  fullName: Microsoft.Extensions.Logging.ILogger
- uid: Microsoft.Extensions.Logging
  commentId: N:Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft
  name: Microsoft.Extensions.Logging
  nameWithType: Microsoft.Extensions.Logging
  fullName: Microsoft.Extensions.Logging
  spec.csharp:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
  spec.vb:
  - uid: Microsoft
    name: Microsoft
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft
  - name: .
  - uid: Microsoft.Extensions
    name: Extensions
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions
  - name: .
  - uid: Microsoft.Extensions.Logging
    name: Logging
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging
- uid: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger*
  commentId: Overload:NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_FailedLogger
  name: FailedLogger
  nameWithType: ILoggingService.FailedLogger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.FailedLogger
- uid: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger*
  commentId: Overload:NotebookAutomation.Core.Configuration.ILoggingService.GetLogger
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_GetLogger__1
  name: GetLogger
  nameWithType: ILoggingService.GetLogger
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.GetLogger
- uid: Microsoft.Extensions.Logging.ILogger{{T}}
  commentId: T:Microsoft.Extensions.Logging.ILogger{``0}
  parent: Microsoft.Extensions.Logging
  definition: Microsoft.Extensions.Logging.ILogger`1
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<T>
  nameWithType: ILogger<T>
  fullName: Microsoft.Extensions.Logging.ILogger<T>
  nameWithType.vb: ILogger(Of T)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of T)
  name.vb: ILogger(Of T)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: Microsoft.Extensions.Logging.ILogger`1
  commentId: T:Microsoft.Extensions.Logging.ILogger`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  name: ILogger<TCategoryName>
  nameWithType: ILogger<TCategoryName>
  fullName: Microsoft.Extensions.Logging.ILogger<TCategoryName>
  nameWithType.vb: ILogger(Of TCategoryName)
  fullName.vb: Microsoft.Extensions.Logging.ILogger(Of TCategoryName)
  name.vb: ILogger(Of TCategoryName)
  spec.csharp:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: <
  - name: TCategoryName
  - name: '>'
  spec.vb:
  - uid: Microsoft.Extensions.Logging.ILogger`1
    name: ILogger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.ilogger-1
  - name: (
  - name: Of
  - name: " "
  - name: TCategoryName
  - name: )
- uid: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging*
  commentId: Overload:NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_ConfigureLogging_Microsoft_Extensions_Logging_ILoggingBuilder_
  name: ConfigureLogging
  nameWithType: ILoggingService.ConfigureLogging
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.ConfigureLogging
- uid: Microsoft.Extensions.Logging.ILoggingBuilder
  commentId: T:Microsoft.Extensions.Logging.ILoggingBuilder
  parent: Microsoft.Extensions.Logging
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/microsoft.extensions.logging.iloggingbuilder
  name: ILoggingBuilder
  nameWithType: ILoggingBuilder
  fullName: Microsoft.Extensions.Logging.ILoggingBuilder
- uid: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath*
  commentId: Overload:NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
  href: NotebookAutomation.Core.Configuration.ILoggingService.html#NotebookAutomation_Core_Configuration_ILoggingService_CurrentLogFilePath
  name: CurrentLogFilePath
  nameWithType: ILoggingService.CurrentLogFilePath
  fullName: NotebookAutomation.Core.Configuration.ILoggingService.CurrentLogFilePath
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
