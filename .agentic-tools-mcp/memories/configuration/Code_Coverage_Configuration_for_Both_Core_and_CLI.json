{
  "id": "f745bf3f-e6a3-4c8c-83dd-4bced4ac0160",
  "title": "Code Coverage Configuration for Both Core and CLI",
  "details": "Updated code coverage configuration to include both NotebookAutomation.Core and NotebookAutomation.Cli projects.\n\n## Changes Made:\n\n1. **coverlet.runsettings**:\n   - Updated Include pattern from `[NotebookAutomation.Core]*` to `[NotebookAutomation.Core]*,[NotebookAutomation.Cli]*`\n   - Added `ExcludeByAttribute` to exclude generated code\n\n2. **build-ci-local.ps1**:\n   - **CRITICAL FIX**: Changed test target from `$TestProjectPath` (Core.Tests only) to `$SolutionPath` (entire solution)\n   - Added `--settings \"$RepositoryRoot\\coverlet.runsettings\"` parameter to both verbose and non-verbose test commands\n   - Updated help text to show correct test command\n\n3. **ci-windows.yml**:\n   - Added `--settings coverlet.runsettings` parameter to the dotnet test command\n   - Fixed YAML formatting issues that were preventing proper step separation\n\n## Current Status:\n✅ **Both test assemblies now run**: CLI.Tests (170 tests) + Core.Tests (600 tests) = 770 total tests\n✅ **Coverage files generated**: Both projects generate coverage.cobertura.xml files\n⚠️ **CLI coverage content**: CLI coverage files still only show Core coverage, indicating CLI tests primarily exercise Core components through DI\n\n## Test Results:\n- Total tests: 770 (170 CLI + 600 Core)\n- All tests passed: 767 succeeded, 3 skipped, 0 failed\n- CLI tests completed in 4.8s, Core tests in 23.4s\n- Coverage files generated for both assemblies\n\n## Impact:\n- ✅ Fixed the main issue: both test assemblies now run with coverage collection\n- ✅ Local builds and CI builds use consistent configuration\n- ✅ ReportGenerator will collect from both assemblies (may merge Core coverage)\n- ⚠️ CLI-specific code coverage may be limited due to test architecture using mocks\n\n## Files Modified:\n- coverlet.runsettings\n- scripts/build-ci-local.ps1 (key fix: $SolutionPath instead of $TestProjectPath)\n- .github/workflows/ci-windows.yml\n\n## Next Steps:\n1. Verify coverage collection works properly in CI environment\n2. Consider adding integration tests that exercise CLI commands directly for better CLI coverage\n3. Generate coverage reports to confirm both projects are included in aggregated reports",
  "category": "configuration",
  "dateCreated": "2025-06-18T05:16:17.438Z",
  "dateUpdated": "2025-06-18T05:28:27.604Z"
}