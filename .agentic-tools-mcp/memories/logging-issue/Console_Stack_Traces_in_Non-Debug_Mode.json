{
  "id": "96f33435-41b7-4ff2-b8a9-4f6999a3d826",
  "title": "Console Stack Traces in Non-Debug Mode",
  "details": "ISSUE: Stack traces displayed in console even when not in debug mode\n\nPROBLEM:\nUser received full stack traces in console output when running `na.exe video-notes` without --debug flag, despite the ExceptionHandler being designed to show user-friendly messages in non-debug mode.\n\nROOT CAUSE:\nIn LoggingService.cs line 203, the Serilog console output template includes {Exception}:\n\n```csharp\n.WriteTo.Console(\n    restrictedToMinimumLevel: consoleMinLevel,\n    outputTemplate: \"[{Timestamp:HH:mm:ss} {Level:u3}] {Message:lj}{NewLine}{Exception}\",\n    theme: Serilog.Sinks.SystemConsole.Themes.AnsiConsoleTheme.Code)\n```\n\nWhen consoleMinLevel = LogEventLevel.Warning (non-debug mode), ERROR level messages still get displayed because ERROR > WARNING. The {Exception} part of the template shows full stack traces for all exceptions logged at ERROR level.\n\nBEHAVIOR:\n- Non-debug mode: Console shows WARNING and ERROR level messages with full stack traces\n- Debug mode: Console shows DEBUG+ level messages with full stack traces\n- ExceptionHandler shows user-friendly messages correctly, but logger also outputs stack traces\n\nPOTENTIAL SOLUTIONS:\n1. Remove {Exception} from console template in non-debug mode\n2. Use different output templates for debug vs non-debug mode\n3. Adjust console minimum level to ERROR only in non-debug mode\n4. Create custom formatter that respects debug mode setting\n\nRECOMMENDATION:\nUse different console output templates based on debug mode:\n- Debug mode: Include {Exception} for full stack traces\n- Non-debug mode: Exclude {Exception} to only show log messages\n\nThis would make console output consistent with ExceptionHandler's user-friendly approach while preserving detailed logging to files.",
  "category": "logging-issue",
  "dateCreated": "2025-06-14T03:05:30.810Z",
  "dateUpdated": "2025-06-14T03:05:30.810Z"
}