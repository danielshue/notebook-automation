{
  "id": "a8d89922-b848-4a83-a01a-b1352c857e30",
  "title": "Vault Ensure-Metadata Implementation Plan",
  "details": "IMPLEMENTATION PLAN for \"vault ensure-metadata\" CLI command:\n\nREQUIREMENTS:\n1. Update YAML frontmatter in markdown files with program/course/class/module/lesson metadata\n2. Use CourseStructureExtractor for module/lesson detection from directory structure\n3. Use MetadataHierarchyDetector for program/course/class detection from directory structure  \n4. Use batch processing pattern like DocumentNoteBatchProcessor<TProcessor>\n5. Use metadata.yaml templates to ensure all properties exist for each template-type\n6. Support template-type detection: pdf-reference for PDFs, video-reference for videos, resource-reading for *-instructions.md files\n7. NO AISummarizer needed - remove any AI summarization\n8. Support dry-run, logging, and error handling\n\nKEY DIFFERENCES BETWEEN THE TWO EXTRACTORS:\n- CourseStructureExtractor: Focuses on module/lesson extraction from numbered directory patterns and explicit keywords\n- MetadataHierarchyDetector: Focuses on program/course/class hierarchy detection, handles special cases like \"Value Chain Management\"\n\nAPPROACH:\n1. Create MetadataEnsureProcessor: handles single file metadata extraction and YAML frontmatter updates\n2. Create MetadataEnsureBatchProcessor: batch processor using DocumentNoteBatchProcessor pattern\n3. Update VaultCommands.cs to implement actual logic for ensure-metadata command\n4. Register services in DI container\n\nTEMPLATE-TYPE DETECTION LOGIC:\n- Check existing template-type in frontmatter first\n- If missing, detect from filename:\n  - *.pdf → pdf-reference\n  - *.mp4, *.avi, *.mov → video-reference  \n  - *-instructions.md → resource-reading\n- Use metadata.yaml templates to ensure all required properties exist\n\nFILES TO IMPLEMENT:\n- MetadataEnsureProcessor.cs (single file processor)\n- MetadataEnsureBatchProcessor.cs (batch processor)\n- Update VaultCommands.cs (CLI integration)\n- Update ServiceRegistration.cs (DI registration)",
  "category": "implementation",
  "dateCreated": "2025-06-03T16:27:05.923Z",
  "dateUpdated": "2025-06-03T16:27:05.923Z"
}