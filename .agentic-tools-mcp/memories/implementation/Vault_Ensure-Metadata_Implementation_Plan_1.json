{
  "id": "5daff361-7d4c-4a87-9f28-a05867859388",
  "title": "Vault Ensure-Metadata Implementation Plan",
  "details": "TASK: Implement vault ensure-metadata CLI command for updating YAML frontmatter in markdown files.\n\nKEY REQUIREMENTS:\n- Use batch/queue processing pattern (like DocumentNoteBatchProcessor<TProcessor>)\n- Leverage CourseStructureExtractor for module/lesson extraction\n- Leverage MetadataHierarchyDetector for program/course/class extraction\n- Use metadata.yaml as reference for required template-type properties\n- Support dry-run, logging, error handling\n- Template-type inference from filename (e.g., *-instructions.md = resource-reading)\n- Remove all AISummarizer dependencies\n- Ensure all required properties exist for each template-type\n\nCURRENT STATE:\n- MetadataEnsureProcessor.cs: Created, handles single file processing, removed AISummarizer\n- MetadataEnsureBatchProcessor.cs: Created but has inheritance issues, needs fixing\n- Not registered in DI container yet\n- VaultCommands.cs has stub implementation\n\nFIXES NEEDED:\n1. Fix MetadataEnsureBatchProcessor.cs to NOT inherit from DocumentNoteBatchProcessor\n2. Remove AISummarizer dependencies completely\n3. Create proper standalone batch processing logic\n4. Register both processors in ServiceRegistration.cs  \n5. Update VaultCommands.cs to use the new processors\n6. Test the full CLI workflow\n\nTEMPLATE MAPPINGS (from metadata.yaml):\n- pdf-reference: PDFs, type=note/case-study, status=unread\n- video-reference: Videos, type=note/video-note, status=unwatched\n- resource-reading: Instructions/readings, type=note/reading, status=unread\n- Filename patterns: *-instructions.md = resource-reading\n- Associated files: *.pdf = pdf-reference, *.mp4/.mov/.avi = video-reference",
  "category": "implementation",
  "dateCreated": "2025-06-03T16:33:00.572Z",
  "dateUpdated": "2025-06-03T16:33:00.572Z"
}