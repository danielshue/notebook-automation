{
  "id": "e7cb39ed-0923-4d07-ad12-c9fa4847e79f",
  "title": "Improved Version Display in CLI",
  "details": "## Version Display Improvement\n\n### Issue\nThe CLI application was showing a simplified version number (1.0.0.0) from the assembly version attribute, rather than showing the more detailed file version with build information (ex: 1.0.518.xxxxx).\n\n### Solution\nModified `VersionCommands.cs` to display the file version instead of the assembly version. The file version is more meaningful as it includes:\n- Major.Minor version from the project settings\n- Build number (days since a base date - Jan 1, 2024)\n- Revision number (seconds since midnight / 2)\n\n### Implementation\n1. Modified the version command handler to retrieve both assembly and file versions\n2. Prioritized using the file version from the binary's file version information\n3. Maintained assembly version as a fallback for compatibility\n4. Simplified code to reuse the already retrieved versionInfo object\n\n### Build Process \nThe build-ci-local.ps1 script sets the following parameters during build:\n```powershell\ndotnet build ... /p:Version=$packageVersion /p:FileVersion=$fileVersion /p:AssemblyVersion=$assemblyVersion\n```\n\n- Package Version: 1.0.0 (SemVer format for NuGet)\n- Assembly Version: 1.0.0.0 (Standard dotted-quad format)\n- File Version: 1.0.518.xxxxx (Generated from date/time)\n\n### Testing\nThe local CI build generates and tests binaries for multiple architectures with the updated version display logic.\n\n### Resources\n- [Microsoft Versioning Documentation](https://learn.microsoft.com/en-us/dotnet/standard/library-guidance/versioning)\n- [Assembly Version vs File Version](https://stackoverflow.com/questions/64602/what-are-differences-between-assemblyversion-assemblyfileversion-and-assemblyin)\n\nThis improvement makes the version display more informative and useful for tracking builds.",
  "category": "code-improvements",
  "dateCreated": "2025-06-04T05:02:29.718Z",
  "dateUpdated": "2025-06-04T05:02:29.718Z"
}