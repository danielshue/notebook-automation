{
  "id": "8efaa771-b4a7-41e4-bb0b-fc8a0463f937",
  "title": "Vault Ensure-Metadata Command Implementation Plan",
  "details": "Implementation plan for the \"vault ensure-metadata\" CLI command using batch processing structure:\n\nKEY COMPONENTS:\n1. CourseStructureExtractor - extracts module/lesson metadata from directory paths\n2. MetadataHierarchyDetector - extracts program/course/class metadata from directory paths\n3. YamlHelper - handles YAML frontmatter reading/writing (already well-developed)\n4. DocumentNoteBatchProcessor<TProcessor> - queue-based batch processing pattern\n\nDESIGN DECISIONS:\n- Use BOTH CourseStructureExtractor and MetadataHierarchyDetector (don't unify)\n- CourseStructureExtractor focuses on course structure (module/lesson)\n- MetadataHierarchyDetector focuses on hierarchy (program/course/class)\n- Create MetadataEnsureProcessor implementing DocumentNoteProcessorBase\n- Use existing YamlHelper for frontmatter operations\n\nIMPLEMENTATION STEPS:\n1. Create MetadataEnsureProcessor inheriting from DocumentNoteProcessorBase\n2. Create MetadataEnsureBatchProcessor using DocumentNoteBatchProcessor<MetadataEnsureProcessor>\n3. Implement metadata extraction using both utilities\n4. Update VaultCommands to wire up the new command\n5. Add comprehensive logging and dry-run support\n\nMETADATA FIELDS TO ENSURE:\n- program (from MetadataHierarchyDetector)\n- course (from MetadataHierarchyDetector) \n- class (from MetadataHierarchyDetector)\n- module (from CourseStructureExtractor)\n- lesson (from CourseStructureExtractor)\n\nEXISTING INFRASTRUCTURE:\n- YamlHelper has all needed frontmatter operations\n- DocumentNoteBatchProcessor provides queue/progress tracking\n- VaultCommands has command registration pattern",
  "category": "implementation_plan",
  "dateCreated": "2025-06-03T16:14:16.936Z",
  "dateUpdated": "2025-06-03T16:14:16.936Z"
}